<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>StriveZs的博客</title>
  
  <subtitle>Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.strivezs.com/"/>
  <updated>2021-01-21T14:31:28.445Z</updated>
  <id>www.strivezs.com/</id>
  
  <author>
    <name>StriveZs</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode No.14</title>
    <link href="www.strivezs.com/2021/01/21/LeetCode%E7%AC%AC%E5%8D%81%E4%BA%94%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/21/LeetCode%E7%AC%AC%E5%8D%81%E4%BA%94%E9%A2%98/</id>
    <published>2021-01-21T14:31:28.445Z</published>
    <updated>2021-01-21T14:31:28.445Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十五题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。</p><p>注意：答案中不可以包含重复的三元组。</p><p></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = [<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">-1</span>,<span class="number">-4</span>]</span><br><span class="line">输出：[[<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">2</span>],[<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>]]</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = []</span><br><span class="line">输出：[]</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = [<span class="number">0</span>]</span><br><span class="line">输出：[]</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> &lt;= nums.length &lt;= <span class="number">3000</span></span><br><span class="line"><span class="number">-105</span> &lt;= nums[i] &lt;= <span class="number">105</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><h3 id="超时版本"><a class="header-anchor" href="#超时版本">¶</a>超时版本</h3><p>直接使用三个大循环</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">class Solution(object):</span><br><span class="line">    def threeSum(self, nums):</span><br><span class="line">        <span class="string">""</span><span class="comment">"</span></span><br><span class="line">        :<span class="built_in">type</span> num<span class="variable">s:</span> List[<span class="keyword">int</span>]</span><br><span class="line">        :rtype: List[List[<span class="keyword">int</span>]]</span><br><span class="line">        <span class="string">""</span><span class="comment">"</span></span><br><span class="line">        nums = sorted(nums)</span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nums) &lt;=<span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> result</span><br><span class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">            temp = []</span><br><span class="line">            <span class="keyword">j</span> = i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">j</span> &lt; <span class="built_in">len</span>(nums):</span><br><span class="line">                <span class="keyword">k</span> = <span class="keyword">j</span>+<span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> <span class="keyword">k</span> &lt; <span class="built_in">len</span>(nums):</span><br><span class="line">                    <span class="keyword">if</span> nums[i] + nums[<span class="keyword">j</span>] + nums[<span class="keyword">k</span>] == <span class="number">0</span>:</span><br><span class="line">                        temp.<span class="keyword">append</span>(nums[i])</span><br><span class="line">                        temp.<span class="keyword">append</span>(nums[<span class="keyword">j</span>])</span><br><span class="line">                        temp.<span class="keyword">append</span>(nums[<span class="keyword">k</span>])</span><br><span class="line">                        <span class="keyword">if</span> sorted(temp) in resul<span class="variable">t:</span></span><br><span class="line">                            pass</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            result.<span class="keyword">append</span>(sorted(temp))</span><br><span class="line">                        temp = []</span><br><span class="line">                    <span class="keyword">k</span> += <span class="number">1</span></span><br><span class="line">                <span class="keyword">j</span> += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    <span class="keyword">print</span>(s.threeSum([-<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">4</span>]))</span><br></pre></td></tr></table></figure><h3 id="改正后的版本"><a class="header-anchor" href="#改正后的版本">¶</a>改正后的版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">threeSum</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :type nums: List[int]</span></span><br><span class="line"><span class="string">    :rtype: List[List[int]]</span></span><br><span class="line"><span class="string">    尝试使用双向指针的方式来进行查找，这样可以去除一个循环，关键点是进行边界的收缩</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    nums.sort()</span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">        l = i + <span class="number">1</span></span><br><span class="line">        r = len(nums) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r:</span><br><span class="line">            s = nums[i] + nums[l] + nums[r]</span><br><span class="line">            <span class="keyword">if</span> s == <span class="number">0</span>:</span><br><span class="line">                temp = [nums[i], nums[l], nums[r]]</span><br><span class="line">                <span class="comment"># 去重</span></span><br><span class="line">                <span class="keyword">if</span> temp <span class="keyword">in</span> result:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    result.append(temp)</span><br><span class="line">                l += <span class="number">1</span></span><br><span class="line">                r -= <span class="number">1</span></span><br><span class="line">                <span class="comment"># 剪枝操作 目的是收缩边界</span></span><br><span class="line">                <span class="keyword">while</span> l &lt; r <span class="keyword">and</span> nums[l] == nums[l - <span class="number">1</span>]:</span><br><span class="line">                    l += <span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> r &gt; l <span class="keyword">and</span> nums[r] == nums[r + <span class="number">1</span>]:</span><br><span class="line">                    r -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> s &gt; <span class="number">0</span>:</span><br><span class="line">                r -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                l += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十五题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.14</title>
    <link href="www.strivezs.com/2021/01/20/LeetCode%E7%AC%AC%E5%8D%81%E5%9B%9B%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/20/LeetCode%E7%AC%AC%E5%8D%81%E5%9B%9B%E9%A2%98/</id>
    <published>2021-01-20T11:38:23.260Z</published>
    <updated>2021-01-20T11:38:23.260Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十四题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>编写一个函数来查找字符串数组中的最长公共前缀。</p><p>如果不存在公共前缀，返回空字符串 “”。</p><p></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：strs = [<span class="string">"flower"</span>,<span class="string">"flow"</span>,<span class="string">"flight"</span>]</span><br><span class="line">输出：<span class="string">"fl"</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：strs = [<span class="string">"dog"</span>,<span class="string">"racecar"</span>,<span class="string">"car"</span>]</span><br><span class="line">输出：<span class="string">""</span></span><br><span class="line">解释：输入不存在公共前缀。</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> &lt;= strs.length &lt;= <span class="number">200</span></span><br><span class="line"><span class="number">0</span> &lt;= strs[i].length &lt;= <span class="number">200</span></span><br><span class="line">strs[i] 仅由小写英文字母组成</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span><span class="params">(self, strs)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type strs: List[str]</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> len(strs) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        <span class="keyword">if</span> len(strs) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> strs[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> strs[<span class="number">0</span>] == <span class="string">''</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        commanForward = <span class="string">''</span></span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        index = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(strs[<span class="number">0</span>])):</span><br><span class="line">            commanForward += strs[<span class="number">0</span>][i]</span><br><span class="line">            j = <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> j &lt; len(strs):</span><br><span class="line">                <span class="keyword">if</span> commanForward != strs[j][<span class="number">0</span>:i+<span class="number">1</span>]:</span><br><span class="line">                    index = i</span><br><span class="line">                    flag = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> flag:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> ~flag:</span><br><span class="line">                index = i+<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> index == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> strs[<span class="number">0</span>][<span class="number">0</span>:index]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.longestCommonPrefix([<span class="string">"a"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>]))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十四题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;编写一个函数来查找字符串数组中的最长公共前缀。&lt;/p&gt;
&lt;p&gt;如果不存在公共前缀，返回空字符串 
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.13</title>
    <link href="www.strivezs.com/2021/01/20/LeetCode%E7%AC%AC%E5%8D%81%E4%B8%89%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/20/LeetCode%E7%AC%AC%E5%8D%81%E4%B8%89%E9%A2%98/</id>
    <published>2021-01-20T11:14:22.654Z</published>
    <updated>2021-01-20T11:14:22.654Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十三题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">字符          数值</span><br><span class="line">I             <span class="number">1</span></span><br><span class="line">V             <span class="number">5</span></span><br><span class="line">X             <span class="number">10</span></span><br><span class="line">L             <span class="number">50</span></span><br><span class="line">C             <span class="number">100</span></span><br><span class="line">D             <span class="number">500</span></span><br><span class="line">M             <span class="number">1000</span></span><br></pre></td></tr></table></figure><p>例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p><p>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。<br>X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 <br>C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。<br>给定一个罗马数字，将其转换成整数。输入确保在 1 到 3999 的范围内。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"III"</span></span><br><span class="line">输出: <span class="number">3</span></span><br><span class="line">示例 <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"IV"</span></span><br><span class="line">输出: <span class="number">4</span></span><br><span class="line">示例 <span class="number">3</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"IX"</span></span><br><span class="line">输出: <span class="number">9</span></span><br><span class="line">示例 <span class="number">4</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"LVIII"</span></span><br><span class="line">输出: <span class="number">58</span></span><br><span class="line">解释: L = <span class="number">50</span>, V= <span class="number">5</span>, III = <span class="number">3.</span></span><br><span class="line">示例 <span class="number">5</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"MCMXCIV"</span></span><br><span class="line">输出: <span class="number">1994</span></span><br><span class="line">解释: M = <span class="number">1000</span>, CM = <span class="number">900</span>, XC = <span class="number">90</span>, IV = <span class="number">4.</span></span><br></pre></td></tr></table></figure><p>提示：</p><p>题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。<br>IC 和 IM 这样的例子并不符合题目要求，49 应该写作 XLIX，999 应该写作 CMXCIX 。<br>关于罗马数字的详尽书写规则，可以参考 罗马数字 - Mathematics 。</p><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">romanToInt</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        dictList = [<span class="string">'I'</span>, <span class="string">'IV'</span>, <span class="string">'V'</span>, <span class="string">'IX'</span>, <span class="string">'X'</span>, <span class="string">'XL'</span>, <span class="string">'L'</span>, <span class="string">'XC'</span>, <span class="string">'C'</span>, <span class="string">'CD'</span>, <span class="string">'D'</span>, <span class="string">'CM'</span>, <span class="string">'M'</span>]  <span class="comment"># 特殊规则字符</span></span><br><span class="line">        numList = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">90</span>, <span class="number">100</span>, <span class="number">400</span>, <span class="number">500</span>, <span class="number">900</span>, <span class="number">1000</span>]  <span class="comment"># 特殊规则数字</span></span><br><span class="line"></span><br><span class="line">        dicts = zip(dictList,numList)</span><br><span class="line">        dicts = dict(dicts)</span><br><span class="line">        dictSet = set(dictList)</span><br><span class="line">        result = <span class="number">0</span></span><br><span class="line">        i = len(s) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">                result += dicts[s[i]]</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> s[i] == <span class="string">'V'</span> <span class="keyword">or</span> s[i] == <span class="string">'X'</span>:</span><br><span class="line">                    <span class="keyword">if</span> s[i - <span class="number">1</span>] == <span class="string">'I'</span>:</span><br><span class="line">                        temp = s[i - <span class="number">1</span>] + s[i]</span><br><span class="line">                        result += dicts[temp]</span><br><span class="line">                        i -= <span class="number">2</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        result += dicts[s[i]]</span><br><span class="line">                        i -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> s[i] == <span class="string">'L'</span> <span class="keyword">or</span> s[i] == <span class="string">'C'</span>:</span><br><span class="line">                    <span class="keyword">if</span> s[i - <span class="number">1</span>] == <span class="string">'X'</span>:</span><br><span class="line">                        temp = s[i - <span class="number">1</span>] + s[i]</span><br><span class="line">                        result += dicts[temp]</span><br><span class="line">                        i -= <span class="number">2</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        result += dicts[s[i]]</span><br><span class="line">                        i -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> s[i] == <span class="string">'D'</span> <span class="keyword">or</span> s[i] == <span class="string">'M'</span>:</span><br><span class="line">                    <span class="keyword">if</span> s[i - <span class="number">1</span>] == <span class="string">'C'</span>:</span><br><span class="line">                        temp = s[i - <span class="number">1</span>] + s[i]</span><br><span class="line">                        result += dicts[temp]</span><br><span class="line">                        i -= <span class="number">2</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        result += dicts[s[i]]</span><br><span class="line">                        i -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    result += dicts[s[i]]</span><br><span class="line">                    i -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.romanToInt(<span class="string">'CX'</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十三题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。&lt;/p&gt;
&lt;figure cl
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.12</title>
    <link href="www.strivezs.com/2021/01/19/LeetCode%E7%AC%AC%E5%8D%81%E4%BA%8C%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/19/LeetCode%E7%AC%AC%E5%8D%81%E4%BA%8C%E9%A2%98/</id>
    <published>2021-01-19T10:59:46.411Z</published>
    <updated>2021-01-19T10:59:46.411Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十二题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">字符          数值</span><br><span class="line">I             <span class="number">1</span></span><br><span class="line">V             <span class="number">5</span></span><br><span class="line">X             <span class="number">10</span></span><br><span class="line">L             <span class="number">50</span></span><br><span class="line">C             <span class="number">100</span></span><br><span class="line">D             <span class="number">500</span></span><br><span class="line">M             <span class="number">1000</span></span><br></pre></td></tr></table></figure><p>例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p><p>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。<br>X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 <br>C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。<br>给定一个整数，将其转为罗马数字。输入确保在 1 到 3999 的范围内。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="number">3</span></span><br><span class="line">输出: <span class="string">"III"</span></span><br><span class="line">示例 <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="number">4</span></span><br><span class="line">输出: <span class="string">"IV"</span></span><br><span class="line">示例 <span class="number">3</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="number">9</span></span><br><span class="line">输出: <span class="string">"IX"</span></span><br><span class="line">示例 <span class="number">4</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="number">58</span></span><br><span class="line">输出: <span class="string">"LVIII"</span></span><br><span class="line">解释: L = <span class="number">50</span>, V = <span class="number">5</span>, III = <span class="number">3.</span></span><br><span class="line">示例 <span class="number">5</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="number">1994</span></span><br><span class="line">输出: <span class="string">"MCMXCIV"</span></span><br><span class="line">解释: M = <span class="number">1000</span>, CM = <span class="number">900</span>, XC = <span class="number">90</span>, IV = <span class="number">4.</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intToRoman</span><span class="params">(self, num)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type num: int</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># 列举出所有特殊情况：列出特殊情况,而对于其他情况则可以用使用循环处理</span></span><br><span class="line">        dictList = [<span class="string">'I'</span>,<span class="string">'IV'</span>,<span class="string">'V'</span>,<span class="string">'IX'</span>,<span class="string">'X'</span>,<span class="string">'XL'</span>,<span class="string">'L'</span>,<span class="string">'XC'</span>,<span class="string">'C'</span>,<span class="string">'CD'</span>,<span class="string">'D'</span>,<span class="string">'CM'</span>,<span class="string">'M'</span>]  <span class="comment"># 特殊规则字符</span></span><br><span class="line">        numList = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">90</span>,<span class="number">100</span>,<span class="number">400</span>,<span class="number">500</span>,<span class="number">900</span>,<span class="number">1000</span>]  <span class="comment"># 特殊规则数字</span></span><br><span class="line"></span><br><span class="line">        result = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(dictList)):</span><br><span class="line">            <span class="keyword">while</span> num &gt;= numList[len(dictList) - i - <span class="number">1</span>]:  <span class="comment"># 要从后往前处理，这样才能保证IV 在 I之前出现</span></span><br><span class="line">                num -= numList[len(dictList) - i - <span class="number">1</span>]</span><br><span class="line">                result += dictList[len(dictList) - i - <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.intToRoman(<span class="number">2018</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十二题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。&lt;/p&gt;
&lt;figure cl
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.11</title>
    <link href="www.strivezs.com/2021/01/18/LeetCode%E7%AC%AC%E5%8D%81%E4%B8%80%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/18/LeetCode%E7%AC%AC%E5%8D%81%E4%B8%80%E9%A2%98/</id>
    <published>2021-01-18T11:14:45.679Z</published>
    <updated>2021-01-18T11:14:45.679Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十一题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给你 n 个非负整数 a1，a2，…，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0) 。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</p><p>说明：你不能倾斜容器。</p><p></p><p>示例 1：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/RoxA9E.jpg" alt="figure.1"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">输入：[<span class="number">1</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">7</span>]</span><br><span class="line">输出：<span class="number">49</span> </span><br><span class="line">解释：图中垂直线代表输入数组 [<span class="number">1</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">7</span>]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 <span class="number">49</span>。</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：height = [<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">输出：<span class="number">1</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：height = [<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">4</span>]</span><br><span class="line">输出：<span class="number">16</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：height = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line">输出：<span class="number">2</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line">n = height.length</span><br><span class="line"><span class="number">2</span> &lt;= n &lt;= <span class="number">3</span> * <span class="number">104</span></span><br><span class="line"><span class="number">0</span> &lt;= height[i] &lt;= <span class="number">3</span> * <span class="number">104</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxArea</span><span class="params">(self, height)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        从两头往中间靠，记录最佳</span></span><br><span class="line"><span class="string">        :type height: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        best = <span class="number">0</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        j = len(height) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j:</span><br><span class="line">            temp = (j - i) * min(height[i], height[j])  <span class="comment"># 计算盛水容量</span></span><br><span class="line">            <span class="keyword">if</span> temp &gt; best:</span><br><span class="line">                best = temp</span><br><span class="line">            <span class="keyword">if</span> height[i] &lt; height[j]:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                j -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> best</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.maxArea([<span class="number">1</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">7</span>]))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十一题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给你 n 个非负整数 a1，a2，…，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.10</title>
    <link href="www.strivezs.com/2021/01/17/LeetCode%E7%AC%AC%E5%8D%81%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/17/LeetCode%E7%AC%AC%E5%8D%81%E9%A2%98/</id>
    <published>2021-01-17T15:14:17.841Z</published>
    <updated>2021-01-17T15:14:17.841Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 ‘.’ 和 ‘*’ 的正则表达式匹配。</p><p>‘.’ 匹配任意单个字符<br>‘*’ 匹配零个或多个前面的那一个元素<br>所谓匹配，是要涵盖 整个 字符串 s的，而不是部分字符串。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"aa"</span> p = <span class="string">"a"</span></span><br><span class="line">输出：<span class="literal">false</span></span><br><span class="line">解释：<span class="string">"a"</span> 无法匹配 <span class="string">"aa"</span> 整个字符串。</span><br><span class="line">示例 <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"aa"</span> p = <span class="string">"a*"</span></span><br><span class="line">输出：<span class="literal">true</span></span><br><span class="line">解释：因为 <span class="string">'*'</span> 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 <span class="string">'a'</span>。因此，字符串 <span class="string">"aa"</span> 可被视为 <span class="string">'a'</span> 重复了一次。</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"ab"</span> p = <span class="string">".*"</span></span><br><span class="line">输出：<span class="literal">true</span></span><br><span class="line">解释：<span class="string">".*"</span> 表示可匹配零个或多个（<span class="string">'*'</span>）任意字符（<span class="string">'.'</span>）。</span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"aab"</span> p = <span class="string">"c*a*b"</span></span><br><span class="line">输出：<span class="literal">true</span></span><br><span class="line">解释：因为 <span class="string">'*'</span> 表示零个或多个，这里 <span class="string">'c'</span> 为 <span class="number">0</span> 个, <span class="string">'a'</span> 被重复一次。因此可以匹配字符串 <span class="string">"aab"</span>。</span><br><span class="line">示例 <span class="number">5</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"mississippi"</span> p = <span class="string">"mis*is*p*."</span></span><br><span class="line">输出：<span class="literal">false</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> &lt;= s.<span class="built_in">length</span> &lt;= <span class="number">20</span></span><br><span class="line"><span class="number">0</span> &lt;= p.<span class="built_in">length</span> &lt;= <span class="number">30</span></span><br><span class="line">s 可能为空，且只包含从 <span class="keyword">a</span>-z 的小写字母。</span><br><span class="line">p 可能为空，且只包含从 <span class="keyword">a</span>-z 的小写字母，以及字符 . 和 *。</span><br><span class="line">保证每次出现字符 * 时，前面都匹配到有效的字符</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isMatch</span><span class="params">(self, s, p)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :type p: str</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        matchObject = re.match(p,s)</span><br><span class="line">        <span class="comment"># print(result)</span></span><br><span class="line">        <span class="keyword">if</span> matchObject:</span><br><span class="line">            <span class="keyword">if</span> matchObject.group() == s:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.isMatch(<span class="string">'ab'</span>,<span class="string">'.c'</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 ‘.’ 和 ‘*’ 的正则表达式匹配。
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.9</title>
    <link href="www.strivezs.com/2021/01/16/LeetCode%E7%AC%AC%E4%B9%9D%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/16/LeetCode%E7%AC%AC%E4%B9%9D%E9%A2%98/</id>
    <published>2021-01-16T14:13:25.620Z</published>
    <updated>2021-01-16T14:13:25.620Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第九题"><a href="#LeetCode第九题" class="headerlink" title="LeetCode第九题"></a>LeetCode第九题</h1><p>今天从天津回石家庄，跑了一天晚上才收拾好，今天就做了个简单的题目，明天争取两道题，干巴爹。  </p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">示例</span> <span class="attr">1:</span></span><br><span class="line"></span><br><span class="line"><span class="string">输入:</span> <span class="number">121</span></span><br><span class="line"><span class="string">输出:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">示例</span> <span class="attr">2:</span></span><br><span class="line"></span><br><span class="line"><span class="string">输入:</span> <span class="number">-121</span></span><br><span class="line"><span class="string">输出:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">解释:</span> <span class="string">从左向右读,</span> <span class="string">为</span> <span class="number">-121</span> <span class="string">。</span> <span class="string">从右向左读,</span> <span class="string">为</span> <span class="number">121</span><span class="bullet">-</span> <span class="string">。因此它不是一个回文数。</span></span><br><span class="line"><span class="string">示例</span> <span class="attr">3:</span></span><br><span class="line"></span><br><span class="line"><span class="string">输入:</span> <span class="number">10</span></span><br><span class="line"><span class="string">输出:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">解释:</span> <span class="string">从右向左读,</span> <span class="string">为</span> <span class="number">01</span> <span class="string">。因此它不是一个回文数。</span></span><br><span class="line"><span class="string">进阶:</span></span><br></pre></td></tr></table></figure><br>你能不将整数转为字符串来解决这个问题吗？  </p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Python版本"><a href="#Python版本" class="headerlink" title="Python版本"></a>Python版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type x: int</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        x = str(abs(x))</span><br><span class="line">        reverse_x = x[::<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">if</span> reverse_x == x:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.isPalindrome(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">intToStr</span><span class="params">(<span class="keyword">int</span> number)</span></span>&#123;</span><br><span class="line">        <span class="built_in">string</span> result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> temp = number;</span><br><span class="line">        <span class="keyword">while</span>(temp != <span class="number">0</span>)&#123;</span><br><span class="line">            result += ((temp % <span class="number">10</span>) + <span class="string">'0'</span>);</span><br><span class="line">            temp /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        reverse(result.<span class="built_in">begin</span>(),result.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(x &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">string</span> goal=<span class="string">""</span>;</span><br><span class="line">            <span class="built_in">string</span> use = goal = intToStr(x);</span><br><span class="line">            reverse(use.<span class="built_in">begin</span>(),use.<span class="built_in">end</span>());</span><br><span class="line">            <span class="keyword">if</span>(use == goal)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode第九题&quot;&gt;&lt;a href=&quot;#LeetCode第九题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode第九题&quot;&gt;&lt;/a&gt;LeetCode第九题&lt;/h1&gt;&lt;p&gt;今天从天津回石家庄，跑了一天晚上才收拾好，今天就做了个简单的题目，明
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.8</title>
    <link href="www.strivezs.com/2021/01/15/LeetCode%E7%AC%AC%E5%85%AB%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/15/LeetCode%E7%AC%AC%E5%85%AB%E9%A2%98/</id>
    <published>2021-01-15T11:23:19.142Z</published>
    <updated>2021-01-15T11:23:19.142Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第八题"><a href="#LeetCode第八题" class="headerlink" title="LeetCode第八题"></a>LeetCode第八题</h1><p>又是辛勤劳动的一天呢QWQ。  </p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>请你来实现一个 atoi 函数，使其能将字符串转换成整数。</p><p>首先，该函数会根据需要丢弃无用的开头空格字符，直到寻找到第一个非空格的字符为止。接下来的转化规则如下：</p><p>如果第一个非空字符为正或者负号时，则将该符号与之后面尽可能多的连续数字字符组合起来，形成一个有符号整数。<br>假如第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成一个整数。<br>该字符串在有效的整数部分之后也可能会存在多余的字符，那么这些字符可以被忽略，它们对函数不应该造成影响。<br>假如该字符串中的第一个非空格字符不是一个有效整数字符、字符串为空或字符串仅包含空白字符时，则你的函数不需要进行转换，即无法进行有效转换。</p><p>在任何情况下，若函数不能进行有效的转换时，请返回 0 。</p><p>注意：</p><p>本题中的空白字符只包括空格字符 ‘ ‘ 。<br>假设我们的环境只能存储 32 位大小的有符号整数，那么其数值范围为 [−231,  231 − 1]。如果数值超过这个范围，请返回  231 − 1 或 −231 。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"42"</span></span><br><span class="line">输出: <span class="number">42</span></span><br><span class="line">示例 <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"   -42"</span></span><br><span class="line">输出: <span class="number">-42</span></span><br><span class="line">解释: 第一个非空白字符为 <span class="string">'-'</span>, 它是一个负号。</span><br><span class="line">     我们尽可能将负号与后面所有连续出现的数字组合起来，最后得到 <span class="number">-42</span> 。</span><br><span class="line">示例 <span class="number">3</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"4193 with words"</span></span><br><span class="line">输出: <span class="number">4193</span></span><br><span class="line">解释: 转换截止于数字 <span class="string">'3'</span> ，因为它的下一个字符不为数字。</span><br><span class="line">示例 <span class="number">4</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"words and 987"</span></span><br><span class="line">输出: <span class="number">0</span></span><br><span class="line">解释: 第一个非空字符是 <span class="string">'w'</span>, 但它不是数字或正、负号。</span><br><span class="line">     因此无法执行有效的转换。</span><br><span class="line">示例 <span class="number">5</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"-91283472332"</span></span><br><span class="line">输出: <span class="number">-2147483648</span></span><br><span class="line">解释: 数字 <span class="string">"-91283472332"</span> 超过 <span class="number">32</span> 位有符号整数范围。 </span><br><span class="line">     因此返回 INT_MIN (−<span class="number">231</span>) 。</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> &lt;= s.length &lt;= <span class="number">200</span></span><br><span class="line">s 由英文字母（大写和小写）、数字、<span class="string">' '</span>、<span class="string">'+'</span>、<span class="string">'-'</span> 和 <span class="string">'.'</span> 组成</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 判断是否为数字</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isNum</span><span class="params">(self,s)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> s == <span class="string">'0'</span> <span class="keyword">or</span> s == <span class="string">'1'</span> <span class="keyword">or</span> s == <span class="string">'2'</span> <span class="keyword">or</span> s == <span class="string">'3'</span> <span class="keyword">or</span> s == <span class="string">'4'</span> <span class="keyword">or</span> s == <span class="string">'5'</span> <span class="keyword">or</span> \</span><br><span class="line">        s == <span class="string">'6'</span> <span class="keyword">or</span> s == <span class="string">'7'</span> <span class="keyword">or</span> s == <span class="string">'8'</span> <span class="keyword">or</span> s == <span class="string">'9'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 丢弃开头空白字符</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deleteKong</span><span class="params">(self,s)</span>:</span></span><br><span class="line">        index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            <span class="keyword">if</span> s[i] != <span class="string">' '</span>:</span><br><span class="line">                index = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        s = s[index:]</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">myAtoi</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        s = self.deleteKong(s)</span><br><span class="line">        flag = <span class="literal">False</span> <span class="comment"># 正负标志</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">1</span> <span class="keyword">and</span> s[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">1</span> <span class="keyword">and</span> s[<span class="number">0</span>] == <span class="string">'+'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> s[<span class="number">0</span>] == <span class="string">'-'</span> <span class="keyword">or</span> s[<span class="number">0</span>] == <span class="string">'+'</span>:</span><br><span class="line">            <span class="keyword">if</span> s[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                flag = <span class="literal">False</span></span><br><span class="line">            s = s[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> self.isNum(s[<span class="number">0</span>]):</span><br><span class="line">            result = <span class="string">''</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">                <span class="keyword">if</span> self.isNum(s[i]):</span><br><span class="line">                    result += s[i]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            result = int(result)</span><br><span class="line">            <span class="keyword">if</span> result &lt; -(<span class="number">2</span>**<span class="number">31</span>) <span class="keyword">or</span> result &gt; (<span class="number">2</span>**<span class="number">31</span>)<span class="number">-1</span>:</span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    <span class="keyword">return</span> -(<span class="number">2</span>**<span class="number">31</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> (<span class="number">2</span>**<span class="number">31</span>)<span class="number">-1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">-1</span>*result</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> result</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.myAtoi(<span class="string">'2147483648'</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode第八题&quot;&gt;&lt;a href=&quot;#LeetCode第八题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode第八题&quot;&gt;&lt;/a&gt;LeetCode第八题&lt;/h1&gt;&lt;p&gt;又是辛勤劳动的一天呢QWQ。  &lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.7</title>
    <link href="www.strivezs.com/2021/01/14/LeetCode%E7%AC%AC%E4%B8%83%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/14/LeetCode%E7%AC%AC%E4%B8%83%E9%A2%98/</id>
    <published>2021-01-14T14:59:58.262Z</published>
    <updated>2021-01-14T14:59:58.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第七题"><a href="#LeetCode第七题" class="headerlink" title="LeetCode第七题"></a>LeetCode第七题</h1><p>今天晚上看了会直播，所以来晚了，一般不缺勤呢。过几天反向跑毒完，我回家还要坚持背英语。  </p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。</p><p>注意：</p><p>假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">123</span></span><br><span class="line">输出：<span class="number">321</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">-123</span></span><br><span class="line">输出：<span class="number">-321</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">120</span></span><br><span class="line">输出：<span class="number">21</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">0</span></span><br><span class="line">输出：<span class="number">0</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">-231</span> &lt;= x &lt;= <span class="number">231</span> - <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Python版本"><a href="#Python版本" class="headerlink" title="Python版本"></a>Python版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverse</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type x: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> x == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> x</span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">            x = abs(x)</span><br><span class="line">        item = list(str(x))</span><br><span class="line">        item_reverse = item[::<span class="number">-1</span>]</span><br><span class="line">        result = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(item_reverse)):</span><br><span class="line">            result += item_reverse[i]</span><br><span class="line">        result = int(result)</span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            result = <span class="number">-1</span> * result</span><br><span class="line">        <span class="keyword">if</span> result &lt; -(<span class="number">2</span>**<span class="number">31</span>) <span class="keyword">or</span> result &gt; (<span class="number">2</span>**<span class="number">31</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(<span class="number">2</span>**<span class="number">31</span>)</span><br><span class="line">    print(s.reverse(<span class="number">1534236469</span>))</span><br></pre></td></tr></table></figure><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;<span class="built_in">string</span>.h&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="symbol">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">int</span> reverse(<span class="built_in">int</span> x) &#123;</span><br><span class="line">        <span class="built_in">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> pop = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x != <span class="number">0</span>)&#123;</span><br><span class="line">            pop = x % <span class="number">10</span>; <span class="comment">//取出最右变得数字</span></span><br><span class="line">            x /= <span class="number">10</span>; <span class="comment">//实际上就是完成了 从 123 变成 12 并且取出 3 </span></span><br><span class="line">            <span class="keyword">if</span>(result &gt; INT_MAX / <span class="number">10</span> || (result == INT_MAX / <span class="number">10</span> &amp;&amp; pop &gt; <span class="number">7</span>))&#123;<span class="comment">//判断上限</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(result &lt; INT_MIN / <span class="number">10</span> || (result == INT_MIN / <span class="number">10</span> &amp;&amp; pop &lt; <span class="number">-8</span>))&#123;<span class="comment">//判断下限</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            result = result * <span class="number">10</span> + pop;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode第七题&quot;&gt;&lt;a href=&quot;#LeetCode第七题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode第七题&quot;&gt;&lt;/a&gt;LeetCode第七题&lt;/h1&gt;&lt;p&gt;今天晚上看了会直播，所以来晚了，一般不缺勤呢。过几天反向跑毒完，我回
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.6</title>
    <link href="www.strivezs.com/2021/01/13/LeetCode%E7%AC%AC%E5%85%AD%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/13/LeetCode%E7%AC%AC%E5%85%AD%E9%A2%98/</id>
    <published>2021-01-13T11:55:36.545Z</published>
    <updated>2021-01-13T11:55:36.545Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第六题</h1><p>本题的实质就是模拟，虽然AC了，但是空间复杂度有点高，时间复杂度的话就是O(len(s))主要是找不到一个合适的存储，我只能用numpy存储了，大小的话和numRow有关。</p><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z 字形排列。</p><p>比如输入字符串为 “PAYPALISHIRING” 行数为 3 时，排列如下：</p><p>P   A   H   N<br>A P L S I I G<br>Y   I   R<br>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：“PAHNAPLSIIGYIR”。</p><p>请你实现这个将字符串进行指定行数变换的函数：</p><p>string convert(string s, int numRows);</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"PAYPALISHIRING"</span>, numRows = <span class="number">3</span></span><br><span class="line">输出：<span class="string">"PAHNAPLSIIGYIR"</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line">输入：s = <span class="string">"PAYPALISHIRING"</span>, numRows = <span class="number">4</span></span><br><span class="line">输出：<span class="string">"PINALSIGYAHRPI"</span></span><br><span class="line">解释：</span><br><span class="line">P     I    N</span><br><span class="line">A   L S  I G</span><br><span class="line">Y A   H R</span><br><span class="line">P     I</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"A"</span>, numRows = <span class="number">1</span></span><br><span class="line">输出：<span class="string">"A"</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> &lt;= s.length &lt;= <span class="number">1000</span></span><br><span class="line">s 由英文字母（小写和大写）、',' 和 '.' 组成</span><br><span class="line"><span class="number">1</span> &lt;= numRows &lt;= <span class="number">1000</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><p>稍微给个原理图:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/O3gsTr.png" alt="figure.1"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(self, s, numRows)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :type numRows: int</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        </span><br><span class="line">        list_str = list(s)</span><br><span class="line">        length = len(s)</span><br><span class="line">        <span class="keyword">if</span> numRows == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">        onePart = numRows + (numRows - <span class="number">2</span>) <span class="comment"># 一个Z字形前半部分的字符个数</span></span><br><span class="line">        numPart = int(length / onePart) + <span class="number">1</span> <span class="comment"># 总共多少个part</span></span><br><span class="line">        <span class="comment">#print(list_str)</span></span><br><span class="line"></span><br><span class="line">        storeChart = np.zeros((numRows,numPart*numRows<span class="number">-1</span>),dtype=np.string_) <span class="comment"># 用来存储Z字形变换后的字符</span></span><br><span class="line">        <span class="comment">#print(storeChart)</span></span><br><span class="line">        row = <span class="number">0</span></span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):  <span class="comment"># 时间复杂度为O(len(s))</span></span><br><span class="line">            <span class="keyword">if</span> numRows == <span class="number">2</span>:  <span class="comment"># 单独处理2这种情况</span></span><br><span class="line">                <span class="keyword">if</span> i % onePart == <span class="number">0</span>:</span><br><span class="line">                    storeChart[i % onePart][row] = list_str[i]</span><br><span class="line">                <span class="keyword">elif</span> i % onePart == <span class="number">1</span>:</span><br><span class="line">                    storeChart[i % onePart][row] = list_str[i]</span><br><span class="line">                    row += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> i % onePart &lt; numRows:</span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    row += <span class="number">1</span></span><br><span class="line">                    flag = <span class="literal">False</span></span><br><span class="line">                storeChart[i % onePart][row] = list_str[i]</span><br><span class="line">            <span class="keyword">elif</span> i % onePart &gt;= numRows:</span><br><span class="line">                row += <span class="number">1</span></span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">                storeChart[onePart - i % onePart][row] = list_str[i]</span><br><span class="line">        <span class="comment">#print(storeChart)</span></span><br><span class="line">        strList = storeChart.astype(np.str)</span><br><span class="line">        result = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(strList.shape[<span class="number">0</span>]):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(strList.shape[<span class="number">1</span>]):</span><br><span class="line">                <span class="keyword">if</span> strList[i][j] != <span class="string">''</span>:</span><br><span class="line">                    result += str(strList[i][j])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.convert(<span class="string">'ABCD'</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第六题&lt;/h1&gt;
&lt;p&gt;本题的实质就是模拟，虽然AC了，但是空间复杂度有点高，时间复杂度的话就是O(len(s))主要是找不到一个合适的存储，我只能用numpy存储了，大小的话和numRow有关。&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;h
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.5</title>
    <link href="www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E4%BA%94%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E4%BA%94%E9%A2%98/</id>
    <published>2021-01-11T12:16:42.782Z</published>
    <updated>2021-01-11T12:16:42.782Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第五题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给你一个字符串 s，找到 s 中最长的回文子串。</p><p></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"babad"</span></span><br><span class="line">输出：<span class="string">"bab"</span></span><br><span class="line">解释：<span class="string">"aba"</span> 同样是符合题意的答案。</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"cbbd"</span></span><br><span class="line">输出：<span class="string">"bb"</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"a"</span></span><br><span class="line">输出：<span class="string">"a"</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"ac"</span></span><br><span class="line">输出：<span class="string">"a"</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> &lt;= s.length &lt;= <span class="number">1000</span></span><br><span class="line">s 仅由数字和英文字母（大写和/或小写）组成</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><h3 id="Python"><a class="header-anchor" href="#Python">¶</a>Python</h3><p>这个版本超时了，原因分析的话：应该是划分子串操作timeout了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut</span><span class="params">(self, str1)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    得到字符串的所有子串</span></span><br><span class="line"><span class="string">    :type str1: str</span></span><br><span class="line"><span class="string">    :return: list</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    results = []</span><br><span class="line">    <span class="comment"># x + 1 表示子字符串长度</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">        <span class="comment"># i 表示偏移量</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1) - x):</span><br><span class="line">            tempStr = str1[i:i + x + <span class="number">1</span>]</span><br><span class="line">            results.append(tempStr)</span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span><span class="params">(self, s)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :type s: str</span></span><br><span class="line"><span class="string">    :rtype: str</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    split_res = self.cut(s)</span><br><span class="line">    length = len(split_res)</span><br><span class="line">    maxlen = <span class="number">0</span></span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">        temp = split_res[length - i - <span class="number">1</span>][::<span class="number">-1</span>] <span class="comment"># 字符串翻转</span></span><br><span class="line">        <span class="keyword">if</span> temp == split_res[length - i - <span class="number">1</span>]:</span><br><span class="line">            <span class="keyword">if</span> len(temp) &gt; maxlen:</span><br><span class="line">                maxlen = len(temp)</span><br><span class="line">                result = split_res[length - i - <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h3 id="C"><a class="header-anchor" href="#C">¶</a>C++</h3><p>AC的C++版本</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;<span class="built_in">string</span>.h&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="symbol">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> longestPalindrome(<span class="built_in">string</span> s) &#123;</span><br><span class="line">        <span class="built_in">int</span> len = s.length();</span><br><span class="line">        <span class="keyword">if</span>(len == <span class="number">0</span> || len == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span> start=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> maxLen = <span class="number">1</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="built_in">int</span>&gt; &gt; ls(len,vector&lt;<span class="built_in">int</span>&gt;(len)); <span class="comment">//定义一个二维数组</span></span><br><span class="line">        <span class="comment">//初始化找一个长度为2的字符串的回文  s[i] = s[i+1]</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            ls[i][i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i &lt; len<span class="number">-1</span> &amp;&amp; s[i] == s[i+<span class="number">1</span>])&#123;</span><br><span class="line">                ls[i][i+<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">                maxLen = <span class="number">2</span>;</span><br><span class="line">                start = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//接下来处理长度大于2 小于最大长度的回文</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">3</span>;i&lt;=len;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> j=<span class="number">0</span>;j+i<span class="number">-1</span>&lt;len;j++)&#123;</span><br><span class="line">                <span class="built_in">int</span> ends = j+i<span class="number">-1</span>; <span class="comment">//终止字符位置  长度为i的字符串</span></span><br><span class="line">                <span class="keyword">if</span>(s[j] == s[ends] &amp;&amp; ls[j+<span class="number">1</span>][ends<span class="number">-1</span>] == <span class="number">1</span>)&#123; <span class="comment">//满足首位字符相同，且长度为i-1的字符串也是回文串</span></span><br><span class="line">                    ls[j][ends] = <span class="number">1</span>;</span><br><span class="line">                    start = j;</span><br><span class="line">                    maxLen = i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substr(start,maxLen);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第五题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给你一个字符串 s，找到 s 中最长的回文子串。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>Python中round四舍五入成偶的问题</title>
    <link href="www.strivezs.com/2021/01/11/Python%E4%B8%ADround%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%E6%88%90%E5%81%B6%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/11/Python%E4%B8%ADround%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%E6%88%90%E5%81%B6%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-01-11T11:22:58.791Z</published>
    <updated>2021-01-11T11:22:58.791Z</updated>
    
    <content type="html"><![CDATA[<h1>Python中round四舍五入成偶的问题</h1><p>今天在编写代码的时候发现了一个round的小问题，我对1.5使用round()得到的是2，但是我对2.5使用round（）的时候同样也得到的是2，经过我搜索发现，python3中round（）会对1.5 2.5这类到相邻整数距离相同的数字取偶数整数，而不是按照大家正常认为的四舍五入。</p><p>在Python2和Python3中对于round()函数的取值的的区别</p><p>例：</p><ol><li>Python2中对round()函数的取值</li></ol><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">24.5</span>))</span></span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line"><span class="number">25</span></span><br></pre></td></tr></table></figure><ol start="2"><li>当Python中对同样的数进行round()函数的取值</li></ol><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">24.5</span>))</span></span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line"><span class="number">24</span></span><br></pre></td></tr></table></figure><p>在Python2中和Python3中对同一个数进行round()取值时，结果却不同</p><p>很简单，在Python2中对于round()取值就是数学概念进行四舍五入</p><p>下面是Python3中对不同数的进行round()函数的取值</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">22.5</span>))</span></span><br><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">23.5</span>))</span></span><br><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">22.51</span>))</span></span><br><span class="line"> </span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">24</span></span><br><span class="line"><span class="number">23</span></span><br></pre></td></tr></table></figure><p>当对22.5取值是舍</p><p>当对23.5取值是进</p><p>当对22.51取值是进</p><p>这样就可以证明了：</p><p>①.当被修约的值为5时，如果他前面的数为偶数且被修约数的后面没有数时则舍弃；</p><p>②.当被修约的值为5时，如果他前面的数为奇数时则进位；</p><p>③.当被修约的值为5时，如果他前面的数为偶数时且被修约数的后面还有数时，则进位。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Python中round四舍五入成偶的问题&lt;/h1&gt;
&lt;p&gt;今天在编写代码的时候发现了一个round的小问题，我对1.5使用round()得到的是2，但是我对2.5使用round（）的时候同样也得到的是2，经过我搜索发现，python3中round（）会对1.5 2.5这
      
    
    </summary>
    
    
      <category term="Python" scheme="www.strivezs.com/categories/Python/"/>
    
      <category term="问题记录" scheme="www.strivezs.com/categories/Python/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="Python" scheme="www.strivezs.com/tags/Python/"/>
    
      <category term="round" scheme="www.strivezs.com/tags/round/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.4</title>
    <link href="www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E5%9B%9B%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E5%9B%9B%E9%A2%98/</id>
    <published>2021-01-11T11:19:08.237Z</published>
    <updated>2021-01-11T11:19:08.237Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode 第四题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这两个正序数组的中位数。</p><p>进阶：你能设计一个时间复杂度为 O(log (m+n)) 的算法解决此问题吗？</p><p></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">1</span>,<span class="number">3</span>], nums2 = [<span class="number">2</span>]</span><br><span class="line">输出：<span class="number">2.00000</span></span><br><span class="line">解释：合并数组 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] ，中位数 <span class="number">2</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">1</span>,<span class="number">2</span>], nums2 = [<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">输出：<span class="number">2.50000</span></span><br><span class="line">解释：合并数组 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>] ，中位数 (<span class="number">2</span> + <span class="number">3</span>) / <span class="number">2</span> = <span class="number">2.5</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">0</span>,<span class="number">0</span>], nums2 = [<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">输出：<span class="number">0.00000</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [], nums2 = [<span class="number">1</span>]</span><br><span class="line">输出：<span class="number">1.00000</span></span><br><span class="line">示例 <span class="number">5</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">2</span>], nums2 = []</span><br><span class="line">输出：<span class="number">2.00000</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line">nums1.length == m</span><br><span class="line">nums2.length == n</span><br><span class="line"><span class="number">0</span> &lt;= m &lt;= <span class="number">1000</span></span><br><span class="line"><span class="number">0</span> &lt;= n &lt;= <span class="number">1000</span></span><br><span class="line"><span class="number">1</span> &lt;= m + n &lt;= <span class="number">2000</span></span><br><span class="line"><span class="number">-106</span> &lt;= nums1[i], nums2[i] &lt;= <span class="number">106</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><h3 id="Python版本"><a class="header-anchor" href="#Python版本">¶</a>Python版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMedianSortedArrays</span><span class="params">(self, nums1, nums2)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums1: List[int]</span></span><br><span class="line"><span class="string">        :type nums2: List[int]</span></span><br><span class="line"><span class="string">        :rtype: float</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment">#print(nums1)</span></span><br><span class="line">        nums1.extend(nums2)</span><br><span class="line">        <span class="comment">#print(nums1)</span></span><br><span class="line">        nums1.sort()</span><br><span class="line">        length = len(nums1)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> length == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> nums1[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">elif</span> length == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> length % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            index1 = int(length / <span class="number">2</span>)</span><br><span class="line">            index2 = index1 - <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> (nums1[index1] + nums1[index2]) / <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> length % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">            index = int((length / <span class="number">2</span>))</span><br><span class="line">            <span class="keyword">return</span> nums1[index]</span><br></pre></td></tr></table></figure><h3 id="C"><a class="header-anchor" href="#C">¶</a>C++</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; <span class="built_in">list</span>;</span><br><span class="line">        <span class="keyword">double</span> result=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums1.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="built_in">list</span>.push_back(nums1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums2.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="built_in">list</span>.push_back(nums2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(<span class="built_in">list</span>.<span class="built_in">begin</span>(),<span class="built_in">list</span>.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">list</span>.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(len%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> index1 = len/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> index2 = index1 + <span class="number">1</span>;</span><br><span class="line">            result = (<span class="built_in">list</span>[index1<span class="number">-1</span>] + <span class="built_in">list</span>[index2<span class="number">-1</span>]) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            result = <span class="built_in">list</span>[<span class="built_in">ceil</span>(<span class="keyword">float</span>(len)/<span class="number">2</span>)<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode 第四题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.3</title>
    <link href="www.strivezs.com/2021/01/10/LeetCode%E7%AC%AC%E4%B8%89%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/10/LeetCode%E7%AC%AC%E4%B8%89%E9%A2%98/</id>
    <published>2021-01-10T12:01:44.418Z</published>
    <updated>2021-01-10T12:01:44.418Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第三题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">示例 1:</span><br><span class="line"></span><br><span class="line"><span class="section">输入: s = "abcabcbb"</span></span><br><span class="line"><span class="section">输出: 3 </span></span><br><span class="line"><span class="section">解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。</span></span><br><span class="line">示例 2:</span><br><span class="line"></span><br><span class="line"><span class="section">输入: s = "bbbbb"</span></span><br><span class="line"><span class="section">输出: 1</span></span><br><span class="line"><span class="section">解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。</span></span><br><span class="line">示例 3:</span><br><span class="line"></span><br><span class="line"><span class="section">输入: s = "pwwkew"</span></span><br><span class="line"><span class="section">输出: 3</span></span><br><span class="line"><span class="section">解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。</span></span><br><span class="line">     请注意，你的答案必须是 子串 的长度，<span class="string">"pwke"</span> 是一个子序列，不是子串。</span><br><span class="line">示例 4:</span><br><span class="line"></span><br><span class="line"><span class="section">输入: s = ""</span></span><br><span class="line"><span class="section">输出: 0</span></span><br></pre></td></tr></table></figure><p>提示：</p><p>0 &lt;= s.length &lt;= 5 * 104<br>s 由英文字母、数字、符号和空格组成</p><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><h3 id="Python版本"><a class="header-anchor" href="#Python版本">¶</a>Python版本</h3><h4 id="第一版"><a class="header-anchor" href="#第一版">¶</a>第一版</h4><p>感觉自己严重缺乏OJ练习了，思想已经逐渐僵化，这一版直接超时了，虽然能做出来，但是不AC有卵用呢？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">noRepeat</span><span class="params">(self,str1)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        判断字符串是否存在重复字符</span></span><br><span class="line"><span class="string">        :param str1:</span></span><br><span class="line"><span class="string">        :return: Bool</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">            l1 = re.findall(str1[i],str1)</span><br><span class="line">            <span class="keyword">if</span> len(l1) != <span class="number">1</span>:</span><br><span class="line">                flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cut</span><span class="params">(self, str1)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        得到字符串的所有子串</span></span><br><span class="line"><span class="string">        :type str1: str</span></span><br><span class="line"><span class="string">        :return: list</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        results = []</span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="comment"># x + 1 表示子字符串长度</span></span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">            <span class="comment"># i 表示偏移量</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1) - x):</span><br><span class="line">                tempStr = str1[i:i + x + <span class="number">1</span>]</span><br><span class="line">                <span class="keyword">if</span> self.noRepeat(tempStr):</span><br><span class="line">                    results.append(tempStr)</span><br><span class="line">        <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># print(self.cut(s))</span></span><br><span class="line">        split_str = self.cut(s)</span><br><span class="line">        maxLen = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(split_str)):</span><br><span class="line">            pattern = split_str[i]</span><br><span class="line">            <span class="keyword">if</span> re.search(pattern,s) != <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> len(pattern) &gt; maxLen:</span><br><span class="line">                    maxLen = len(pattern)</span><br><span class="line">        <span class="keyword">return</span> maxLen</span><br></pre></td></tr></table></figure><h4 id="第二版"><a class="header-anchor" href="#第二版">¶</a>第二版</h4><p>这一版是看了一下题解自己写的, 思想还是很简单的，是我太菜了。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="symbol">Solution:</span></span><br><span class="line">    <span class="symbol">def</span> <span class="symbol">lengthOfLongestSubstring</span>(<span class="symbol">self, <span class="symbol">s</span></span>):</span><br><span class="line">        """</span><br><span class="line">        :<span class="symbol">type</span> <span class="symbol">s: <span class="symbol">str</span></span></span><br><span class="line">        :<span class="symbol">rtype: <span class="symbol">int</span></span></span><br><span class="line">        """</span><br><span class="line">        <span class="symbol">st</span> = &#123;&#125;</span><br><span class="line">        i, ans = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            <span class="keyword">if</span> s[j] <span class="keyword">in</span> st:</span><br><span class="line">                i = max(st[s[j]], i)</span><br><span class="line">            ans = max(ans, j - i + <span class="number">1</span>)</span><br><span class="line">            st[s[j]] = j + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br></pre></td></tr></table></figure><h3 id="C艹版本"><a class="header-anchor" href="#C艹版本">¶</a>C艹版本</h3><p>主要用的是vector来进行操作的, C++ 我都快忘光了，害 科研狗的噩梦。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> maxLen=<span class="number">0</span>,len=<span class="number">0</span>;;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; charV;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(num &lt; s.length())&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">find</span>(charV.<span class="built_in">begin</span>(),charV.<span class="built_in">end</span>(),s[i]) == charV.<span class="built_in">end</span>() &amp;&amp; i&lt;s.length())&#123;</span><br><span class="line">                charV.push_back(s[i]);</span><br><span class="line">                len++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                num++;</span><br><span class="line">                i = num;</span><br><span class="line">                charV.<span class="built_in">clear</span>();</span><br><span class="line">                charV.push_back(s[i]);</span><br><span class="line">                <span class="keyword">if</span>(maxLen &lt; len)&#123;</span><br><span class="line">                    maxLen = len;</span><br><span class="line">                &#125;</span><br><span class="line">                len = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(maxLen &lt; len)&#123;</span><br><span class="line">            maxLen = len;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxLen;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第三题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.2</title>
    <link href="www.strivezs.com/2021/01/08/LeetCode%E7%AC%AC%E4%BA%8C%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/08/LeetCode%E7%AC%AC%E4%BA%8C%E9%A2%98/</id>
    <published>2021-01-08T10:40:20.768Z</published>
    <updated>2021-01-08T10:40:20.768Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第2题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。</p><p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p><p>你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><p>示例1：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/ba4SnQ.jpg" alt="figure.1"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>], l2 = [<span class="number">5</span>,<span class="number">6</span>,<span class="number">4</span>]</span><br><span class="line">输出：[<span class="number">7</span>,<span class="number">0</span>,<span class="number">8</span>]</span><br><span class="line">解释：<span class="number">342</span> + <span class="number">465</span> = <span class="number">807.</span></span><br><span class="line"></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：l1 = [<span class="number">0</span>], l2 = [<span class="number">0</span>]</span><br><span class="line">输出：[<span class="number">0</span>]</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：l1 = [<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>], l2 = [<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>]</span><br><span class="line">输出：[<span class="number">8</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><p>代码这里使用的list格式，对于题目要求的格式只需要进行二者的格式转换就可以了</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">class Solution(object):</span><br><span class="line">    def addTwoNumbers(self, l1, l2):</span><br><span class="line">        <span class="string">""</span><span class="comment">"</span></span><br><span class="line">        :<span class="built_in">type</span> l1: List</span><br><span class="line">        :<span class="built_in">type</span> l2: List</span><br><span class="line">        :rtype: List</span><br><span class="line">        <span class="string">""</span><span class="comment">"</span></span><br><span class="line">        </span><br><span class="line">        l1 = [l1[<span class="built_in">len</span>(l1)-i-<span class="number">1</span>] <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(l1))]</span><br><span class="line">        str1 = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(l1)):</span><br><span class="line">            str1 = str1 + str(l1[i])</span><br><span class="line">        # <span class="keyword">print</span>(<span class="keyword">int</span>(str1))</span><br><span class="line">        l2 = [l2[<span class="built_in">len</span>(l2) - i - <span class="number">1</span>] <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(l2))]</span><br><span class="line">        str2 = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(l2)):</span><br><span class="line">            str2 = str2 + str(l2[i])</span><br><span class="line">        # <span class="keyword">print</span>(<span class="keyword">int</span>(str1))</span><br><span class="line">        result = <span class="keyword">list</span>(str(<span class="keyword">int</span>(str1) + <span class="keyword">int</span>(str2)))</span><br><span class="line">        result_list = []</span><br><span class="line">        #print(result)</span><br><span class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">            result_list.<span class="keyword">append</span>(<span class="keyword">int</span>(result[<span class="built_in">len</span>(result) - i - <span class="number">1</span>]))</span><br><span class="line">        #print(result_list)</span><br><span class="line">        <span class="keyword">return</span> result_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    s.addTwoNumbers([<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>],[<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第2题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.1</title>
    <link href="www.strivezs.com/2021/01/08/LeetCode%E7%AC%AC1%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/08/LeetCode%E7%AC%AC1%E9%A2%98/</id>
    <published>2021-01-08T10:40:17.268Z</published>
    <updated>2021-01-08T10:40:17.268Z</updated>
    
    <content type="html"><![CDATA[<p>很久没有更新博客了之前一直在忙于考试，最近终于考完了，以后会慢慢坚持更新博客的。对于OJ这个题我计划是每天做一道两道，也是为了以后毕业可以在面试的时候有一个加分项吧，同样也可以锻炼一下自己的编程能力西西。  我觉得对于我来说就是贵在坚持，毕竟在果壳的科研路上也才刚刚起步，日久天长，在搞好科研的同时，可以在在其他方面提升一下自己。</p><h1>LeetCode第1题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 的那 两个 整数，并返回它们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</p><p>你可以按任意顺序返回答案。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = [<span class="number">2</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">15</span>], target = <span class="number">9</span></span><br><span class="line">输出：[<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">解释：因为 nums[<span class="number">0</span>] + nums[<span class="number">1</span>] == <span class="number">9</span> ，返回 [<span class="number">0</span>, <span class="number">1</span>] 。</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = [<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>], target = <span class="number">6</span></span><br><span class="line">输出：[<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = [<span class="number">3</span>,<span class="number">3</span>], target = <span class="number">6</span></span><br><span class="line">输出：[<span class="number">0</span>,<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        result_index = []</span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        length = len(nums)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">            j = i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> j &lt; length:</span><br><span class="line">                <span class="keyword">if</span> nums[i] + nums[j] == target:</span><br><span class="line">                    flag = <span class="literal">True</span></span><br><span class="line">                    result_index.append(i)</span><br><span class="line">                    result_index.append(j)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                j = j + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> flag:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> result_index</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    nums = [<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>]</span><br><span class="line">    target = <span class="number">6</span></span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.twoSum(nums,target))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很久没有更新博客了之前一直在忙于考试，最近终于考完了，以后会慢慢坚持更新博客的。对于OJ这个题我计划是每天做一道两道，也是为了以后毕业可以在面试的时候有一个加分项吧，同样也可以锻炼一下自己的编程能力西西。  我觉得对于我来说就是贵在坚持，毕竟在果壳的科研路上也才刚刚起步，日
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>Resolution 归结原理</title>
    <link href="www.strivezs.com/2020/11/15/Resolution%20%E5%BD%92%E7%BB%93%E5%8E%9F%E7%90%86/"/>
    <id>www.strivezs.com/2020/11/15/Resolution%20%E5%BD%92%E7%BB%93%E5%8E%9F%E7%90%86/</id>
    <published>2020-11-15T04:56:45.096Z</published>
    <updated>2020-11-15T04:56:45.096Z</updated>
    
    <content type="html"><![CDATA[<h1>Resolution 归结原理</h1><h2 id="和取范式"><a class="header-anchor" href="#和取范式">¶</a>和取范式</h2><p>满足一种特殊形式的sentences，conjunction of disjunctions of literals(文字)，一个原子命题的符号A或者他前面加上一个 <code>$\neg A $</code>都称为<strong>文字</strong>。<br>disjunction of literals形式如:均用析取符号<code>$\vee$</code>连接，比如<code>$ A\vee B \vee C $</code><br>conjunction of disjunction of literals(和取范式): 多个disjunction of literals用合取符号连接<code>$\wedge</code>，比如:<code>$(A\vee B\vee C)\wedge (D\vee \neg E)$</code><br>上面和的和取范式称为CNF。</p><p>语义等价<code>$\equiv$</code> 表示两个sentences可以互相转换(语义等价)，比如<code>$A \equiv B$</code>, 可以参考knowledge 1中提供的语义等价公式表来进行转换。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/wquYOk.png" alt="figure.1"></p><p>任何范式都是可以转换其他语义等价的合取范式。<br>将knowledge base中的任意一个sentence转换为一个CNF(通过语义等价)，然后将合取去掉，分成一个个disjunction of literals，将分拆开的DOL(disjunction of literals简写)组成一个新的knowledge base。这样将一个原来的一个knowledge base转换为了一个新的 knowledge base(KB简写)。<br>即<code>$KB \equiv KB' $</code></p><h2 id="归结"><a class="header-anchor" href="#归结">¶</a>归结</h2><p><code>$A, \neg A $</code>称为互补文字.</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/hUS3vR.png" alt="figure.2"></p><p>若<code>$ l_{i} $</code>和<code>$ m_{j} $</code>为互补文字，则可以把<code>$ l_{1}\vee l_{i}, m_{j}\vee m_{1} $</code>使用归结原理可以将<code>$ l_{i} $</code>和<code>$ m_{j} $</code>去掉可以化简为<code>$l_{1}\vee m_{1} $</code>从上述的式子中去掉.(<strong>归结规则</strong>)<br>每一次归结只能拿一对来进行归结，然后下一次还可以拿另外一对进行归结.</p><p>对于一个KB可以将使用等价规则将每一个sentence转换为和取范式，然后再将和取范式转化为一个个全是析取的式子(DOL)组成一个新的KB’,然后对于KB’中的DOL进行归结可以得到一个新的DOL，加入到KB’中。</p><h2 id="归结例子"><a class="header-anchor" href="#归结例子">¶</a>归结例子</h2><p><img src="https://gitee.com/zyp521/upload_image/raw/master/cHfQRp.png" alt="figure.3"></p><p><code>$S={KB,\neg \alpha} $</code>, 我们称S为Resolution closure</p><p><strong>具体流程</strong>:将alpha变为<code>$\neg \alpha $</code>然后加入到KB(通过语义等价转换为一个和取范式然后生成一个KB’)中组成一个新的集合KB’，然后在这基础上进行归结, 由于归结是有限,总会有停止情况，如果最后能够归结出一个空子句则表示<code>$KB\models \alpha $</code>，对于上述的归结，每归结一次将生成的句子放到S中，然后直到停止之后，得到的就是RC(S)，如果要证明<code>$KB\models \alpha $</code>，则RC(S)中一定存在一个空语句。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/xL4Mkd.png" alt="figure.4"></p><p>上述过程证明了规则是可靠(sound)的。</p><p>S(是KB和<code>$\neg \alpha$</code>)是永假的，则表示不存在一个真值使得每一个sentences为真，若S为永假，则可以推出RC(S)中包含一个空语句。</p><p>完备性可靠性得证。</p><h2 id="A-Search"><a class="header-anchor" href="#A-Search">¶</a>A* Search</h2><p>设计一个算法，任意给一个KB能否推出a。</p><ul><li>初始状态<code>${KB,\neg a}$</code></li><li>找两个子句归结得到一个新的<code>${KB,\neg a,new sentences}$</code>（可以分成很多种情况，类似一个树划分为无数个节点）</li><li>然后进行继续划分节点搜索</li><li>直到首次到达终止状态</li></ul><h2 id="Horn-and-Definite-Clauses"><a class="header-anchor" href="#Horn-and-Definite-Clauses">¶</a>Horn and Definite Clauses</h2><ul><li>正文字，负文字（带否符号的）</li><li>Defineite clauses: 很多个文字的析取，而且这些文字中有且仅有一个是正的</li><li>Horn Clauses： 很多文字的析取，至多有一个正的，也可以全是负的</li><li>两个Horn Clauses进行归结得到的Clauses一定是一个Hron Clauses</li><li>析取为disjunction，合取为conjunction</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Resolution 归结原理&lt;/h1&gt;
&lt;h2 id=&quot;和取范式&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#和取范式&quot;&gt;¶&lt;/a&gt;和取范式&lt;/h2&gt;
&lt;p&gt;满足一种特殊形式的sentences，conjunction of disjunction
      
    
    </summary>
    
    
      <category term="高级人工智能" scheme="www.strivezs.com/categories/%E9%AB%98%E7%BA%A7%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
      <category term="知识点" scheme="www.strivezs.com/categories/%E9%AB%98%E7%BA%A7%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="Resolution" scheme="www.strivezs.com/tags/Resolution/"/>
    
  </entry>
  
  <entry>
    <title>Cliclick 简单实用</title>
    <link href="www.strivezs.com/2020/11/02/Cliclick%20%E7%AE%80%E5%8D%95%E5%AE%9E%E7%94%A8/"/>
    <id>www.strivezs.com/2020/11/02/Cliclick%20%E7%AE%80%E5%8D%95%E5%AE%9E%E7%94%A8/</id>
    <published>2020-11-02T08:56:22.471Z</published>
    <updated>2020-11-02T08:56:22.471Z</updated>
    
    <content type="html"><![CDATA[<h1>Cliclick 简单实用</h1><p>好久没发东西，最近课程实在是太多了，太忙了。忙晕了害<br>最近需要用到模拟鼠标单击的东西，因此找了找感觉这个还可以简单易用，介绍一下。</p><h2 id="安装"><a class="header-anchor" href="#安装">¶</a>安装</h2><h3 id="Homebrew"><a class="header-anchor" href="#Homebrew">¶</a>Homebrew</h3><p>Homebrew包管理器 : brew install cliclick</p><h3 id="官网下载"><a class="header-anchor" href="#官网下载">¶</a>官网下载</h3><p>也可以直接去官网下载安装包，进行下载安装包:<br><a href="https://www.bluem.net/en/projects/cliclick/">https://www.bluem.net/en/projects/cliclick/</a></p><h2 id="简单使用"><a class="header-anchor" href="#简单使用">¶</a>简单使用</h2><p>打开终端，进入cliclick所在文件夹下，输入：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./cliclick</span> -h</span><br></pre></td></tr></table></figure><p>可以查看帮助。</p><h3 id="打印当前鼠标的位置坐标"><a class="header-anchor" href="#打印当前鼠标的位置坐标">¶</a>打印当前鼠标的位置坐标</h3><p>注意鼠标要事先放在你想要知道坐标的位置。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./cliclick</span> p</span><br></pre></td></tr></table></figure><p>就可以得到一个坐标，</p><h3 id="执行单击事件"><a class="header-anchor" href="#执行单击事件">¶</a>执行单击事件</h3><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cliclick c:<span class="symbol">x</span>,<span class="symbol">y</span> 其中<span class="symbol">x</span>和<span class="symbol">y</span>分别为横坐标和纵坐标</span><br></pre></td></tr></table></figure><p>在命令行输入该命令，鼠标就会自动平移过去执行单击事件了。</p><h2 id="示例"><a class="header-anchor" href="#示例">¶</a>示例:</h2><p>以下是我用python执行命令行来实现的固定位置的单击操作：，这样做的好处是可以重复的执行单击操作。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">import</span> <span class="variable">os</span></span><br><span class="line"><span class="variable">import</span> <span class="variable">time</span></span><br><span class="line"></span><br><span class="line"><span class="variable">cmd1</span> = <span class="string">"./cliclick c:789,867"</span></span><br><span class="line"><span class="variable">cmd2</span> = <span class="string">"./cliclick c:669,792"</span></span><br><span class="line"><span class="variable">for</span> <span class="variable">i</span> <span class="variable"><span class="keyword">in</span></span> <span class="function"><span class="title">range</span>(<span class="number">1000</span>):</span></span><br><span class="line"><span class="function">    <span class="variable">mess1</span> = <span class="variable">os.system</span>(<span class="variable">cmd1</span>)</span></span><br><span class="line">    <span class="function"><span class="title">print</span>(<span class="variable">mess1</span>)</span></span><br><span class="line">    <span class="variable">time.sleep</span>(<span class="number">10</span>)</span><br><span class="line">    <span class="variable">mess2</span> = <span class="variable">os.system</span>(<span class="variable">cmd2</span>)</span><br><span class="line">    <span class="function"><span class="title">print</span>(<span class="variable">mess2</span>)</span></span><br><span class="line">    <span class="function"><span class="title">print</span>(<span class="string">'----'</span> + <span class="title">str</span>(<span class="variable">i</span>+<span class="number">1</span>) + <span class="string">'------'</span>)</span></span><br><span class="line">    <span class="variable">time.sleep</span>(<span class="number">100</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Cliclick 简单实用&lt;/h1&gt;
&lt;p&gt;好久没发东西，最近课程实在是太多了，太忙了。忙晕了害&lt;br&gt;
最近需要用到模拟鼠标单击的东西，因此找了找感觉这个还可以简单易用，介绍一下。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a class=&quot;header-anchor&quot; hre
      
    
    </summary>
    
    
      <category term="功能" scheme="www.strivezs.com/categories/%E5%8A%9F%E8%83%BD/"/>
    
      <category term="Python" scheme="www.strivezs.com/categories/%E5%8A%9F%E8%83%BD/Python/"/>
    
    
      <category term="Python" scheme="www.strivezs.com/tags/Python/"/>
    
      <category term="鼠标单击" scheme="www.strivezs.com/tags/%E9%BC%A0%E6%A0%87%E5%8D%95%E5%87%BB/"/>
    
      <category term="Cliclick" scheme="www.strivezs.com/tags/Cliclick/"/>
    
  </entry>
  
  <entry>
    <title>Focal Loss</title>
    <link href="www.strivezs.com/2020/10/19/Focal%20Loss/"/>
    <id>www.strivezs.com/2020/10/19/Focal%20Loss/</id>
    <published>2020-10-19T09:21:29.493Z</published>
    <updated>2020-10-19T09:21:29.493Z</updated>
    
    <content type="html"><![CDATA[<h1>Focal Loss</h1><h2 id="介绍"><a class="header-anchor" href="#介绍">¶</a>介绍</h2><p>本质上讲，Focal Loss就是一个解决<strong>分类问题中类别不平衡、分类难度差异</strong>的一个Loss。该损失函数降低了大量的简单的负样本在训练中所占的权重。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/CycFSY.jpg" alt="figure.1"></p><p>CE为交叉熵Loss，而FL为Focal Loss</p><h2 id="Focal-Loss——二分类"><a class="header-anchor" href="#Focal-Loss——二分类">¶</a>Focal Loss——二分类</h2><p>Focal Loss的形式(没有引入权值<code>$\alpha$</code> )是:</p><p>$$L_{fl}=\left{\begin{matrix}-(1-\hat{y})^{\gamma}log: \hat{y},y=1 \ -\hat{y}^{\gamma}log:(1-\hat{y}),y=0 \end{matrix}\right.$$</p><p>对于该式子 <code>$\hat{y}$</code>为预测值，而y为真实标签, <code>$\gamma$</code>的作用就是调节权重曲线的陡度。<br><code>$L_{fl}$</code>实际上已经包含了对不均衡样本的解决办法，比如：负样本远比正样本多时，模型肯定会倾向于样本数目多的负类，这是如果负类的<code>$\hat{y}^{\gamma}$</code>比较小，而正类的<code>$(1-\hat{y})^{\gamma}$</code>比较大时，模型就会集中注意力关注正样本。</p><p>我们已知<code>$1-\sigma(x)=\sigma(-x)$</code>且<code>$\hat{y}=\sigma{x}$</code> 因此对上面的式子我们可以变换得到:</p><p><code>$ L_{fl}=\left\{\begin{matrix}-\sigma^{\gamma}(-x)log\:\sigma{x},y=1 \\ -\sigma^{\gamma}{x}log\:\sigma(-x),y=0 \end{matrix}\right. $</code></p><p>同时，可以引入一个权重调整<code>$\alpha$</code>， 会对结果有微小的提升。</p><p><code>$ L_{fl}=\left\{\begin{matrix}-\alpha\sigma^{\gamma}(-x)log\:\sigma{x},y=1 \\ -(1-\alpha)\sigma^{\gamma}{x}log\:\sigma(-x),y=0 \end{matrix}\right. $</code></p><p>在他的文章中，经过一系列调参得到了<code>$\alpha=0.25,\gamma=2$</code>对于他的模型来说效果是最好的。如果需要对需要对<code>$\alpha$</code>进行选择的话，需要使用大的训练样本和算力进行调参。如果要求不太高的话，可以把<code>$\alpha$</code>设置为0.5即可。</p><p>简单说一下这里如果是我进行调参的话，我会使用控制变量法，设定一个<code>$\alpha$</code>的衰减系数，然后给定一个初始的参数值进行训练，每经过一次完整的训练则将这个α对应的准确率记录下来，经过n次衰减后，对比记录得到的结果进行参数alpha的选择。</p><h2 id="Focal-Loss——多分类"><a class="header-anchor" href="#Focal-Loss——多分类">¶</a>Focal Loss——多分类</h2><p>Focal Loss在多分类的形式可以根据二分类的形式得到:<br><code>$ L_{fl}=-(1-\hat{y})^{\gamma}log\:\hat{y}_{t} $</code></p><p>其中<code>$\hat{y}_{t}$</code>为目标的的预测值，一般这个值是经过softmax之后结果。</p><p>如果我们引入权重值<code>$\alpha$</code>之后的样子是:</p><p><code>$ L_{fl}=-\alpha_{t}(1-\hat{y})^{\gamma}log\:\hat{y}_{t} $</code></p><p>其中每个类别都有一个对应的<code>$\alpha_{t}$</code>，并且保证<code>$\sum_{t=1}^{n}\alpha_{t}=1$</code>, 即所有类别的α之和为1.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Focal Loss&lt;/h1&gt;
&lt;h2 id=&quot;介绍&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#介绍&quot;&gt;¶&lt;/a&gt;介绍&lt;/h2&gt;
&lt;p&gt;本质上讲，Focal Loss就是一个解决&lt;strong&gt;分类问题中类别不平衡、分类难度差异&lt;/strong&gt;的
      
    
    </summary>
    
    
      <category term="Loss" scheme="www.strivezs.com/categories/Loss/"/>
    
      <category term="DL" scheme="www.strivezs.com/categories/Loss/DL/"/>
    
    
      <category term="Focal Loss" scheme="www.strivezs.com/tags/Focal-Loss/"/>
    
  </entry>
  
  <entry>
    <title>Mac+Sublime+Latex+Skim配置latex编辑环境</title>
    <link href="www.strivezs.com/2020/10/07/Mac+Sublime+Latex+Skim%E9%85%8D%E7%BD%AElatex%E7%BC%96%E8%BE%91%E7%8E%AF%E5%A2%83/"/>
    <id>www.strivezs.com/2020/10/07/Mac+Sublime+Latex+Skim%E9%85%8D%E7%BD%AElatex%E7%BC%96%E8%BE%91%E7%8E%AF%E5%A2%83/</id>
    <published>2020-10-07T03:32:27.328Z</published>
    <updated>2020-10-07T03:32:27.328Z</updated>
    
    <content type="html"><![CDATA[<h1>Sublime+Latex+Skim配置latex编辑环境</h1><h2 id="安装步骤"><a class="header-anchor" href="#安装步骤">¶</a>安装步骤</h2><h3 id="安装Sublime-Text"><a class="header-anchor" href="#安装Sublime-Text">¶</a>安装Sublime Text</h3><p>首先需要安装Sublime Text 2/3和Package Control，这个有大把的帖子。</p><h3 id="安装MacTex"><a class="header-anchor" href="#安装MacTex">¶</a>安装MacTex</h3><p>MacTex现在是一个2G+的大包子，其实里面很多东西我们不需要，所以本着节约精神，我们安装MacTex_Basic包就行了，现在的版本大概是100M以内。这个安装也是傻瓜的。</p><h3 id="配置"><a class="header-anchor" href="#配置">¶</a>配置</h3><p>在Sublime Text里Command+Shift+P调出命令窗口，输入Install，之后选择LaTexTools，网络OK的话，很快就完成了插件安装。</p><p>LaTexTools插件会在编译你的Tex文件后，调用Skim这个PDF阅读器打开编译出的PDF文件，因此你还需要安装Skim.</p><h4 id="配置Skim"><a class="header-anchor" href="#配置Skim">¶</a>配置Skim</h4><p>运行一下Skim，进入偏好设置——同步，在PDF-Tex同步支持那里选择自定义，输入 <strong>/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl</strong> 第二行不用动。这样，当你在Sublime Text里修改tex文件时，Skim预览也会相应变更。</p><h3 id="测试"><a class="header-anchor" href="#测试">¶</a>测试</h3><p>完成上面所有步骤，其实就已经搭建完成基本环境。创建一个test.tex文档，保存一下以后，Sublime Text会自动套用LaTex语法显示和编译。贴上我后面附的测试代码，一般来说Command+B应该可能会报fontspec错误；如果能正常编译，则会调用Skim显示一个PDF文档了。只是中间的中文不见了。</p><h3 id="中文环境"><a class="header-anchor" href="#中文环境">¶</a>中文环境</h3><p>让我们最后来修改编译和中文环境：<br>打开终端，运行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo tlmgr <span class="keyword">update</span> <span class="comment">--self</span></span><br><span class="line">sudo tlmgr <span class="keyword">install</span> latexmk</span><br></pre></td></tr></table></figure><p>在ST里打开LaTeXTools.sublime-settings（也就是LaTeXTools的用户设置</p><p>如果你是从旧版本升级上来或者担心这个配置文件出现问题，可以依次点击Preferences——Package Settings——LaTeXTools——Reconfigure LaTeXTools and migrate settings重建配置文件），在builder-settings下面新增两项配置：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"program"</span> : <span class="string">"xelatex"</span>,</span><br><span class="line"><span class="string">"command"</span> : [<span class="string">"latexmk"</span>, <span class="string">"-cd"</span>, <span class="string">"-e"</span>, <span class="string">"$pdflatex = 'xelatex -interaction=nonstopmode -synctex=1 %S %O'"</span>, <span class="string">"-f"</span>, <span class="string">"-pdf"</span>],</span><br></pre></td></tr></table></figure><p>另外注意之前应该有&quot;builder&quot;: “default”（或直接设置为空或”traditional”）。</p><p>保存配置文件后关闭，重新编译一下，中文正常啦！</p><h4 id="简单的中文设置方法"><a class="header-anchor" href="#简单的中文设置方法">¶</a>简单的中文设置方法</h4><p>仅需要将在tex文件前面添加上如下代码即可：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%!TEX program = xelatex</span></span><br><span class="line"><span class="comment">%!TEX TS-program = xelatex</span></span><br><span class="line"><span class="comment">%!TEX encoding = UTF-8 Unicode</span></span><br></pre></td></tr></table></figure><p>以及添加 ctex包</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">[UTF8]</span><span class="string">&#123;ctex&#125;</span></span></span><br></pre></td></tr></table></figure><h2 id="总结"><a class="header-anchor" href="#总结">¶</a>总结</h2><p>LaTeXTools默认调用Skim来打开生成的PDF文件，如果你更喜欢使用OS X自带的“预览”，现在可以直接在用户设置中增加：<br>“viewer”: “preview”,<br>目前还不支持其他PDF工具。</p><p>附上我的配置文件：<a href="https://pan.baidu.com/s/1pKGYHfX">https://pan.baidu.com/s/1pKGYHfX</a> 密码：b27u</p><p>测试代码</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">documentclass</span><span class="string">&#123;article&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;xeCJK, fontspec, xunicode, xltxtra&#125;</span></span>  </span><br><span class="line"><span class="tag">\<span class="name">setCJKmainfont</span><span class="string">&#123;Hiragino Sans GB&#125;</span></span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">title</span><span class="string">&#123;Title&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">author</span><span class="string">&#123;&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;document&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">maketitle</span><span class="string">&#123;&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">section</span><span class="string">&#123;Introduction&#125;</span></span></span><br><span class="line"></span><br><span class="line">This is where you will write your content. 在这里写上内容。</span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;document&#125;</span></span></span><br></pre></td></tr></table></figure><p>LATEX的其他选择<br>如果觉得修改设置看起来很复杂，可以在每篇文档前增加%!TEX program = xelatex，这会强制使用xelatex，也是解决中文的一个方法。</p><p>如果只是偶尔需要输入公式，这里介绍一个在线的LaTex公式编辑器  <a href="http://www.codecogs.com/latex/eqneditor.php">http://www.codecogs.com/latex/eqneditor.php</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Sublime+Latex+Skim配置latex编辑环境&lt;/h1&gt;
&lt;h2 id=&quot;安装步骤&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#安装步骤&quot;&gt;¶&lt;/a&gt;安装步骤&lt;/h2&gt;
&lt;h3 id=&quot;安装Sublime-Text&quot;&gt;&lt;a class=&quot;
      
    
    </summary>
    
    
      <category term="MAC" scheme="www.strivezs.com/categories/MAC/"/>
    
      <category term="LaTex" scheme="www.strivezs.com/categories/MAC/LaTex/"/>
    
    
      <category term="MAC" scheme="www.strivezs.com/tags/MAC/"/>
    
      <category term="Sublime" scheme="www.strivezs.com/tags/Sublime/"/>
    
      <category term="Skim" scheme="www.strivezs.com/tags/Skim/"/>
    
      <category term="Latex" scheme="www.strivezs.com/tags/Latex/"/>
    
  </entry>
  
</feed>
