<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>StriveZs的博客</title>
  
  <subtitle>Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.strivezs.com/"/>
  <updated>2021-01-27T03:08:36.683Z</updated>
  <id>www.strivezs.com/</id>
  
  <author>
    <name>StriveZs</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode No.22</title>
    <link href="www.strivezs.com/2021/01/27/LeetCode%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/27/LeetCode%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E9%A2%98/</id>
    <published>2021-01-27T03:08:36.683Z</published>
    <updated>2021-01-27T03:08:36.683Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第二十二题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。</p><p></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：n = <span class="number">3</span></span><br><span class="line">输出：[<span class="string">"((()))"</span>,<span class="string">"(()())"</span>,<span class="string">"(())()"</span>,<span class="string">"()(())"</span>,<span class="string">"()()()"</span>]</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：n = <span class="number">1</span></span><br><span class="line">输出：[<span class="string">"()"</span>]</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> &lt;= n &lt;= <span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(self,strlist, string, l, r, n)</span>:</span></span><br><span class="line">        <span class="comment"># 单边递归结束条件</span></span><br><span class="line">        <span class="keyword">if</span> l &gt; n <span class="keyword">or</span> r &gt; n <span class="keyword">or</span> r &gt; l:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># string生成结束条件</span></span><br><span class="line">        <span class="keyword">if</span> l == n <span class="keyword">and</span> r == n:</span><br><span class="line">            strlist.append(string)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        self.func(strlist, string + <span class="string">'('</span>, l+<span class="number">1</span>, r, n)</span><br><span class="line">        self.func(strlist, string + <span class="string">')'</span>, l, r+<span class="number">1</span>, n)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generateParenthesis</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type n: int</span></span><br><span class="line"><span class="string">        :rtype: List[str]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        strlist = []</span><br><span class="line">        self.func(strlist, <span class="string">""</span>, <span class="number">0</span>, <span class="number">0</span>, n)</span><br><span class="line">        <span class="keyword">return</span> strlist</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.generateParenthesis(<span class="number">3</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第二十二题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.21</title>
    <link href="www.strivezs.com/2021/01/25/LeetCode%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/25/LeetCode%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E9%A2%98/</id>
    <published>2021-01-25T11:54:29.881Z</published>
    <updated>2021-01-25T11:54:29.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第二十一题"><a href="#LeetCode第二十一题" class="headerlink" title="LeetCode第二十一题"></a>LeetCode第二十一题</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 </p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/f64Iep.jpg" alt="figure.1"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line">输入：l1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>], l2 = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">输出：[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>]</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：l1 = [], l2 = []</span><br><span class="line">输出：[]</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：l1 = [], l2 = [<span class="number">0</span>]</span><br><span class="line">输出：[<span class="number">0</span>]</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line">两个链表的节点数目范围是 [<span class="number">0</span>, <span class="number">50</span>]</span><br><span class="line"><span class="number">-100</span> &lt;= Node.val &lt;= <span class="number">100</span></span><br><span class="line">l1 和 l2 均按 非递减顺序 排列</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, val=0, next=None):</span></span><br><span class="line"><span class="comment">#         self.val = val</span></span><br><span class="line"><span class="comment">#         self.next = next</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeTwoLists</span><span class="params">(<span class="keyword">self</span>, <span class="symbol">l1:</span> ListNode, <span class="symbol">l2:</span> ListNode)</span></span> -&gt; <span class="symbol">ListNode:</span></span><br><span class="line">        res = ListNode(None)</span><br><span class="line">        node = res</span><br><span class="line">        <span class="keyword">while</span> l1 <span class="keyword">and</span> <span class="symbol">l2:</span></span><br><span class="line">            <span class="keyword">if</span> l1.val&lt;l2.<span class="symbol">val:</span></span><br><span class="line">                node.<span class="keyword">next</span>,l1 = l1,l1.<span class="keyword">next</span></span><br><span class="line">            <span class="symbol">else:</span></span><br><span class="line">                node.<span class="keyword">next</span>,l2 = l2,l2.<span class="keyword">next</span></span><br><span class="line">            node = node.<span class="keyword">next</span></span><br><span class="line">        <span class="keyword">if</span> <span class="symbol">l1:</span></span><br><span class="line">            node.<span class="keyword">next</span> = l1</span><br><span class="line">        <span class="symbol">else:</span></span><br><span class="line">            node.<span class="keyword">next</span> = l2</span><br><span class="line">        <span class="keyword">return</span> res.<span class="keyword">next</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode第二十一题&quot;&gt;&lt;a href=&quot;#LeetCode第二十一题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode第二十一题&quot;&gt;&lt;/a&gt;LeetCode第二十一题&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot;
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.20</title>
    <link href="www.strivezs.com/2021/01/25/LeetCode%E7%AC%AC%E4%BA%8C%E5%8D%81%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/25/LeetCode%E7%AC%AC%E4%BA%8C%E5%8D%81%E9%A2%98/</id>
    <published>2021-01-25T11:52:45.685Z</published>
    <updated>2021-01-25T11:52:45.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第二十题"><a href="#LeetCode第二十题" class="headerlink" title="LeetCode第二十题"></a>LeetCode第二十题</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个只包括 ‘(‘，’)’，’{‘，’}’，’[‘，’]’ 的字符串 s ，判断字符串是否有效。</p><p>有效字符串需满足：</p><p>左括号必须用相同类型的右括号闭合。<br>左括号必须以正确的顺序闭合。</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：<span class="attr">s</span> = <span class="string">"()"</span></span><br><span class="line">输出：<span class="literal">true</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：<span class="attr">s</span> = <span class="string">"()[]&#123;&#125;"</span></span><br><span class="line">输出：<span class="literal">true</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：<span class="attr">s</span> = <span class="string">"(]"</span></span><br><span class="line">输出：<span class="literal">false</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：<span class="attr">s</span> = <span class="string">"([)]"</span></span><br><span class="line">输出：<span class="literal">false</span></span><br><span class="line">示例 <span class="number">5</span>：</span><br><span class="line"></span><br><span class="line">输入：<span class="attr">s</span> = <span class="string">"&#123;[]&#125;"</span></span><br><span class="line">输出：<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> &lt;= s.length &lt;= <span class="number">104</span></span><br><span class="line">s 仅由括号 '()[]&#123;&#125;' 组成</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isValid</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line"></span><br><span class="line">        string = list(s)</span><br><span class="line">        stack = []</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> string:</span><br><span class="line">            <span class="keyword">if</span> s == <span class="string">'('</span> <span class="keyword">or</span> s == <span class="string">'['</span> <span class="keyword">or</span> s == <span class="string">'&#123;'</span>:</span><br><span class="line">                stack.append(s)</span><br><span class="line">            <span class="keyword">elif</span> s == <span class="string">')'</span>:</span><br><span class="line">                <span class="keyword">if</span> len(stack) == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">                temp = stack.pop()</span><br><span class="line">                <span class="keyword">if</span> temp != <span class="string">'('</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">elif</span> s == <span class="string">']'</span>:</span><br><span class="line">                <span class="keyword">if</span> len(stack) == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">                temp = stack.pop()</span><br><span class="line">                <span class="keyword">if</span> temp != <span class="string">'['</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">elif</span> s == <span class="string">'&#125;'</span>:</span><br><span class="line">                <span class="keyword">if</span> len(stack) == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">                temp = stack.pop()</span><br><span class="line">                <span class="keyword">if</span> temp != <span class="string">'&#123;'</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> len(stack) != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.isValid(<span class="string">"&#123;&#123;&#123;&#123;"</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode第二十题&quot;&gt;&lt;a href=&quot;#LeetCode第二十题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode第二十题&quot;&gt;&lt;/a&gt;LeetCode第二十题&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; cla
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.19</title>
    <link href="www.strivezs.com/2021/01/25/LeetCode%E7%AC%AC%E5%8D%81%E4%B9%9D%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/25/LeetCode%E7%AC%AC%E5%8D%81%E4%B9%9D%E9%A2%98/</id>
    <published>2021-01-25T11:52:41.774Z</published>
    <updated>2021-01-25T11:52:41.774Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第十九题"><a href="#LeetCode第十九题" class="headerlink" title="LeetCode第十九题"></a>LeetCode第十九题</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。</p><p>进阶：你能尝试使用一趟扫描实现吗？</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/OMbmD5.jpg" alt="figure.1"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：head = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>], n = <span class="number">2</span></span><br><span class="line">输出：[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>]</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：head = [<span class="number">1</span>], n = <span class="number">1</span></span><br><span class="line">输出：[]</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：head = [<span class="number">1</span>,<span class="number">2</span>], n = <span class="number">1</span></span><br><span class="line">输出：[<span class="number">1</span>]</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line">链表中结点的数目为 sz</span><br><span class="line"><span class="number">1</span> &lt;= sz &lt;= <span class="number">30</span></span><br><span class="line"><span class="number">0</span> &lt;= Node.val &lt;= <span class="number">100</span></span><br><span class="line"><span class="number">1</span> &lt;= n &lt;= sz</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(<span class="keyword">self</span>, val=<span class="number">0</span>, <span class="keyword">next</span>=None)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="keyword">self</span>.val = val</span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">next</span> = <span class="keyword">next</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeNthFromEnd</span><span class="params">(<span class="keyword">self</span>, head, n)</span></span><span class="symbol">:</span></span><br><span class="line">        <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">            基本思想：由于是寻找从后往前数第n个，因此第一遍先正数n个，然后第二遍再从头开始往后遍历同时第一遍正数的从n开始为空之后，这样第二遍数的就变为到空还有n个</span></span><br><span class="line"><span class="string">            然后在去掉第倒数n个节点就行了。</span></span><br><span class="line"><span class="string">        "</span><span class="string">""</span></span><br><span class="line">        a = head</span><br><span class="line">        b = head</span><br><span class="line">        <span class="comment"># 第一遍数n个</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n)<span class="symbol">:</span></span><br><span class="line">            <span class="keyword">if</span> a.<span class="symbol">next:</span></span><br><span class="line">                a = a.<span class="keyword">next</span></span><br><span class="line">            <span class="symbol">else:</span></span><br><span class="line">                <span class="keyword">return</span> head.<span class="keyword">next</span></span><br><span class="line">        <span class="comment"># 接着数第一遍的同时，第二遍从头开始</span></span><br><span class="line">        <span class="keyword">while</span> a.<span class="symbol">next:</span></span><br><span class="line">            a = a.<span class="keyword">next</span></span><br><span class="line">            b = b.<span class="keyword">next</span></span><br><span class="line">        b.<span class="keyword">next</span> = b.<span class="keyword">next</span>.<span class="keyword">next</span></span><br><span class="line">        <span class="keyword">return</span> head</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode第十九题&quot;&gt;&lt;a href=&quot;#LeetCode第十九题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode第十九题&quot;&gt;&lt;/a&gt;LeetCode第十九题&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; cla
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.18</title>
    <link href="www.strivezs.com/2021/01/23/LeetCode%E7%AC%AC%E5%8D%81%E5%85%AB%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/23/LeetCode%E7%AC%AC%E5%8D%81%E5%85%AB%E9%A2%98/</id>
    <published>2021-01-23T10:59:43.658Z</published>
    <updated>2021-01-23T10:59:43.658Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十八题</h1><p>没做出来，首先用暴力肯定是timeout的，对于本体感觉就是在之前题目三数相加的基础上增加了一个外循环，采用双重外循环+双向指针来实现的，双向指针的目的在于将 o(n*n)的时间复杂度转换为o(n)。</p><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给定一个包含 n 个整数的数组 nums 和一个目标值 target，判断 nums 中是否存在四个元素 a，b，c 和 d ，使得 a + b + c + d 的值与 target 相等？找出所有满足条件且不重复的四元组。</p><p>注意：</p><p>答案中不可以包含重复的四元组。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line"></span><br><span class="line">给定数组 nums = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">-2</span>, <span class="number">2</span>]，和 target = <span class="number">0</span>。</span><br><span class="line"></span><br><span class="line">满足要求的四元组集合为：</span><br><span class="line">[</span><br><span class="line">  [<span class="number">-1</span>,  <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="number">-2</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">  [<span class="number">-2</span>,  <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="解题思路"><a class="header-anchor" href="#解题思路">¶</a>解题思路</h2><p>自己修改之前的三数的代码，总是存在timeout的情况，于是就参考了评论区带佬的代码，增加了剪枝的操作，下面是解析：</p><ul><li>四数之和和三数之和思路类似。</li><li>三数之和是外层循环+内部双指针，四数就是外部两层循环+内部双指针；</li><li>先排序，去重思路还是一样的，外部两层每次判断和前一个数字相同就跳过，内部双指针移动同理判断；</li><li>增加一些剪枝策略，大大提高了执行用时；四处剪枝作用在外部两层循环，首先是在固定了第一个数的位置之后，如果这个数+最后一个数的三倍都还比target小，那么同样可以跳过此轮循环了；如果这个数+其后一个数的三倍比target都大，那么可以退出该层循环了；因为数组都是按升序排列的。</li><li>那么第二层的循环用来固定第二个数的位置时，同样可以用类似的逻辑进行判断，进行剪枝。</li></ul><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">class Solution:</span></span><br><span class="line">    <span class="string">def</span> <span class="string">fourSum(self,</span> <span class="string">nums,</span> <span class="string">target):</span></span><br><span class="line">        <span class="string">if</span> <span class="string">len(nums)</span> <span class="string">&lt;</span> <span class="attr">4:</span></span><br><span class="line">            <span class="string">return</span> <span class="string">[]</span></span><br><span class="line">        <span class="string">res</span> <span class="string">=</span> <span class="string">[]</span></span><br><span class="line">        <span class="string">nums</span> <span class="string">=</span> <span class="string">sorted(nums)</span></span><br><span class="line">        <span class="string">for</span> <span class="string">i</span> <span class="string">in</span> <span class="string">range(len(nums)-3):</span></span><br><span class="line">            <span class="comment"># 1) 去重复</span></span><br><span class="line">            <span class="string">if</span> <span class="string">i</span> <span class="string">&gt;</span> <span class="number">0</span> <span class="string">and</span> <span class="string">nums[i]</span> <span class="string">==</span> <span class="string">nums[i</span> <span class="bullet">-</span> <span class="number">1</span><span class="string">]:</span></span><br><span class="line">                <span class="string">continue</span></span><br><span class="line">            <span class="comment"># 2) 剪枝第一处，因为i后面位置的元素是递增排序的。</span></span><br><span class="line">            <span class="string">if</span> <span class="string">nums[i]</span> <span class="string">+</span> <span class="number">3</span><span class="string">*nums[i+1]</span> <span class="string">&gt;</span> <span class="attr">target:</span></span><br><span class="line">                <span class="string">break</span></span><br><span class="line">            <span class="comment"># 3) 剪枝第二处，因为i后面位置的元素是递增排序的。</span></span><br><span class="line">            <span class="string">if</span> <span class="string">nums[i]</span> <span class="string">+</span> <span class="number">3</span><span class="string">*nums[-1]</span> <span class="string">&lt;</span> <span class="attr">target:</span></span><br><span class="line">                <span class="string">continue</span></span><br><span class="line">            <span class="string">for</span> <span class="string">j</span> <span class="string">in</span> <span class="string">range(i</span> <span class="string">+</span> <span class="number">1</span><span class="string">,</span> <span class="string">len(nums)-2):</span></span><br><span class="line">                <span class="comment"># 4) 去重复</span></span><br><span class="line">                <span class="string">if</span> <span class="string">j</span> <span class="string">&gt;</span> <span class="string">i</span> <span class="string">+</span> <span class="number">1</span> <span class="string">and</span> <span class="string">nums[j]</span> <span class="string">==</span> <span class="string">nums[j</span> <span class="bullet">-</span> <span class="number">1</span><span class="string">]:</span></span><br><span class="line">                    <span class="string">continue</span></span><br><span class="line">                <span class="comment"># 5) 剪枝第三处</span></span><br><span class="line">                <span class="string">if</span> <span class="string">nums[i]+nums[j]+2*nums[j+1]</span> <span class="string">&gt;</span> <span class="attr">target:</span></span><br><span class="line">                    <span class="string">break</span></span><br><span class="line">                <span class="comment"># 6) 剪枝第四处</span></span><br><span class="line">                <span class="string">if</span> <span class="string">nums[i]+nums[j]+2*nums[-1]</span> <span class="string">&lt;</span> <span class="attr">target:</span></span><br><span class="line">                    <span class="string">continue</span></span><br><span class="line">                <span class="string">low,</span> <span class="string">high</span> <span class="string">=</span> <span class="string">j</span> <span class="string">+</span> <span class="number">1</span><span class="string">,</span> <span class="string">len(nums)</span> <span class="bullet">-</span> <span class="number">1</span></span><br><span class="line">                <span class="string">while</span> <span class="string">low</span> <span class="string">&lt;</span> <span class="attr">high:</span></span><br><span class="line">                    <span class="string">if</span> <span class="string">nums[i]</span> <span class="string">+</span> <span class="string">nums[j]</span> <span class="string">+</span> <span class="string">nums[low]</span> <span class="string">+</span> <span class="string">nums[high]</span> <span class="string">==</span> <span class="attr">target:</span></span><br><span class="line">                        <span class="string">res.append([nums[i],</span> <span class="string">nums[j],</span> <span class="string">nums[low],</span> <span class="string">nums[high]])</span></span><br><span class="line">                        <span class="string">low,</span> <span class="string">high</span> <span class="string">=</span> <span class="string">low</span> <span class="string">+</span> <span class="number">1</span><span class="string">,</span> <span class="string">high</span> <span class="bullet">-</span> <span class="number">1</span></span><br><span class="line">                        <span class="comment"># 7) 去重复</span></span><br><span class="line">                        <span class="string">while</span> <span class="string">low</span> <span class="string">&lt;</span> <span class="string">high</span> <span class="string">and</span> <span class="string">nums[low]</span> <span class="string">==</span> <span class="string">nums[low</span> <span class="bullet">-</span> <span class="number">1</span><span class="string">]:</span></span><br><span class="line">                            <span class="string">low</span> <span class="string">+=</span> <span class="number">1</span></span><br><span class="line">                        <span class="comment"># 8) 去重复</span></span><br><span class="line">                        <span class="string">while</span> <span class="string">low</span> <span class="string">&lt;</span> <span class="string">high</span> <span class="string">and</span> <span class="string">nums[high]</span> <span class="string">==</span> <span class="string">nums[high</span> <span class="string">+</span> <span class="number">1</span><span class="string">]:</span></span><br><span class="line">                            <span class="string">high</span> <span class="string">-=</span> <span class="number">1</span></span><br><span class="line">                    <span class="string">if</span> <span class="string">nums[i]</span> <span class="string">+</span> <span class="string">nums[j]</span> <span class="string">+</span> <span class="string">nums[low]</span> <span class="string">+</span> <span class="string">nums[high]</span> <span class="string">&gt;</span> <span class="attr">target:</span></span><br><span class="line">                        <span class="string">high</span> <span class="string">-=</span> <span class="number">1</span></span><br><span class="line">                    <span class="string">if</span> <span class="string">nums[i]</span> <span class="string">+</span> <span class="string">nums[j]</span> <span class="string">+</span> <span class="string">nums[low]</span> <span class="string">+</span> <span class="string">nums[high]</span> <span class="string">&lt;</span> <span class="attr">target:</span></span><br><span class="line">                        <span class="string">low</span> <span class="string">+=</span> <span class="number">1</span></span><br><span class="line">        <span class="string">return</span> <span class="string">res</span></span><br><span class="line"></span><br><span class="line"><span class="string">if</span> <span class="string">__name__</span> <span class="string">==</span> <span class="attr">'__main__':</span></span><br><span class="line">    <span class="string">s</span> <span class="string">=</span> <span class="string">Solution()</span></span><br><span class="line">    <span class="string">print(s.fourSum([1,</span> <span class="number">0</span><span class="string">,</span> <span class="number">-1</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">-2</span><span class="string">,</span> <span class="number">2</span><span class="string">],0))</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十八题&lt;/h1&gt;
&lt;p&gt;没做出来，首先用暴力肯定是timeout的，对于本体感觉就是在之前题目三数相加的基础上增加了一个外循环，采用双重外循环+双向指针来实现的，双向指针的目的在于将 o(n*n)的时间复杂度转换为o(n)。&lt;/p&gt;
&lt;h2 id=&quot;题目
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.17</title>
    <link href="www.strivezs.com/2021/01/22/LeetCode%E7%AC%AC%E5%8D%81%E4%B8%83%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/22/LeetCode%E7%AC%AC%E5%8D%81%E4%B8%83%E9%A2%98/</id>
    <published>2021-01-22T13:37:15.696Z</published>
    <updated>2021-01-22T13:37:15.696Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十七题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。</p><p>给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/SQXdUG.jpg" alt="figure.1"></p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">示例:</span><br><span class="line"></span><br><span class="line">输入：<span class="string">"23"</span></span><br><span class="line">输出：[<span class="string">"ad"</span>, <span class="string">"ae"</span>, <span class="string">"af"</span>, <span class="string">"bd"</span>, <span class="string">"be"</span>, <span class="string">"bf"</span>, <span class="string">"cd"</span>, <span class="string">"ce"</span>, <span class="string">"cf"</span>].</span><br></pre></td></tr></table></figure><p>说明:<br>尽管上面的答案是按字典序排列的，但是你可以任意选择答案输出的顺序。</p><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">letterCombinations</span><span class="params">(self, digits)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type digits: str</span></span><br><span class="line"><span class="string">        :rtype: List[str]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> digits == <span class="string">""</span>:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        <span class="comment"># 字典查表</span></span><br><span class="line">        numList = [<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>]</span><br><span class="line">        characterList = [[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>],[<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>],[<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>],[<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>],[<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'o'</span>],[<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>],[<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>],[<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>]]</span><br><span class="line">        temp = zip(numList,characterList)</span><br><span class="line">        dictList = dict(temp)</span><br><span class="line">        <span class="comment">#print(dictList)</span></span><br><span class="line"></span><br><span class="line">        digitsList = list(digits)</span><br><span class="line">        numCharaList = []</span><br><span class="line">        sumRes = <span class="number">1</span></span><br><span class="line">        <span class="comment"># 统计输入的数字对应的字母</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(digitsList)):</span><br><span class="line">            numCharaList.append(dictList[digitsList[i]])</span><br><span class="line">        <span class="comment">#print(numCharaList)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 生成结果</span></span><br><span class="line">        result = []</span><br><span class="line">        temp = list(itertools.product(*numCharaList))  <span class="comment"># 调用库来生成列表排列组合</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(temp)):</span><br><span class="line">            str1 = <span class="string">''</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(list(temp[i]))):</span><br><span class="line">                str1 += temp[i][j]</span><br><span class="line">            result.append(str1)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.letterCombinations(<span class="string">'23'</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十七题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。&lt;/p&gt;
&lt;p&gt;给出数字到字母
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.16</title>
    <link href="www.strivezs.com/2021/01/22/LeetCode%E7%AC%AC%E5%8D%81%E5%85%AD%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/22/LeetCode%E7%AC%AC%E5%8D%81%E5%85%AD%E9%A2%98/</id>
    <published>2021-01-22T13:37:11.248Z</published>
    <updated>2021-01-22T13:37:11.248Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十六题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给定一个包括 n 个整数的数组 nums 和 一个目标值 target。找出 nums 中的三个整数，使得它们的和与 target 最接近。返回这三个数的和。假定每组输入只存在唯一答案。</p><p></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line"></span><br><span class="line">输入：nums = [<span class="number">-1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-4</span>], target = <span class="number">1</span></span><br><span class="line">输出：<span class="number">2</span></span><br><span class="line">解释：与 target 最接近的和是 <span class="number">2</span> (<span class="number">-1</span> + <span class="number">2</span> + <span class="number">1</span> = <span class="number">2</span>) 。</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> &lt;= nums.length &lt;= <span class="number">10</span>^<span class="number">3</span></span><br><span class="line"><span class="number">-10</span>^<span class="number">3</span> &lt;= nums[i] &lt;= <span class="number">10</span>^<span class="number">3</span></span><br><span class="line"><span class="number">-10</span>^<span class="number">4</span> &lt;= target &lt;= <span class="number">10</span>^<span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">class Solution(object):</span><br><span class="line">    def threeSumClosest(self, nums, target):</span><br><span class="line">        <span class="string">""</span><span class="comment">"</span></span><br><span class="line">        :<span class="built_in">type</span> num<span class="variable">s:</span> List[<span class="keyword">int</span>]</span><br><span class="line">        :<span class="built_in">type</span> targe<span class="variable">t:</span> <span class="keyword">int</span></span><br><span class="line">        :rtype: <span class="keyword">int</span></span><br><span class="line">        尝试使用双向指针的方式来进行查找, 要求事先结果进行排序</span><br><span class="line">        <span class="string">""</span><span class="comment">"</span></span><br><span class="line">        nums.<span class="keyword">sort</span>()</span><br><span class="line">        closeNum = nums[<span class="number">0</span>] + nums[<span class="number">1</span>] + nums[<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">            <span class="keyword">l</span> = i + <span class="number">1</span></span><br><span class="line">            r = <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">l</span> &lt; r:</span><br><span class="line">                s = nums[i] + nums[<span class="keyword">l</span>] + nums[r]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">abs</span>(s - target) &lt; <span class="built_in">abs</span>(closeNum - target):</span><br><span class="line">                    closeNum = s</span><br><span class="line">                elif s &gt; targe<span class="variable">t:</span></span><br><span class="line">                    r -= <span class="number">1</span></span><br><span class="line">                elif s &lt; targe<span class="variable">t:</span></span><br><span class="line">                    <span class="keyword">l</span> += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> target</span><br><span class="line">        <span class="keyword">return</span> closeNum</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    <span class="keyword">print</span>(s.threeSumClosest([-<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,-<span class="number">4</span>], <span class="number">1</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十六题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给定一个包括 n 个整数的数组 nums 和 一个目标值 target。找出 nums 中的三个
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.14</title>
    <link href="www.strivezs.com/2021/01/21/LeetCode%E7%AC%AC%E5%8D%81%E4%BA%94%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/21/LeetCode%E7%AC%AC%E5%8D%81%E4%BA%94%E9%A2%98/</id>
    <published>2021-01-21T14:31:28.445Z</published>
    <updated>2021-01-21T14:31:28.445Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十五题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。</p><p>注意：答案中不可以包含重复的三元组。</p><p></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = [<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">-1</span>,<span class="number">-4</span>]</span><br><span class="line">输出：[[<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">2</span>],[<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>]]</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = []</span><br><span class="line">输出：[]</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：nums = [<span class="number">0</span>]</span><br><span class="line">输出：[]</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> &lt;= nums.length &lt;= <span class="number">3000</span></span><br><span class="line"><span class="number">-105</span> &lt;= nums[i] &lt;= <span class="number">105</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><h3 id="超时版本"><a class="header-anchor" href="#超时版本">¶</a>超时版本</h3><p>直接使用三个大循环</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">class Solution(object):</span><br><span class="line">    def threeSum(self, nums):</span><br><span class="line">        <span class="string">""</span><span class="comment">"</span></span><br><span class="line">        :<span class="built_in">type</span> num<span class="variable">s:</span> List[<span class="keyword">int</span>]</span><br><span class="line">        :rtype: List[List[<span class="keyword">int</span>]]</span><br><span class="line">        <span class="string">""</span><span class="comment">"</span></span><br><span class="line">        nums = sorted(nums)</span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nums) &lt;=<span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> result</span><br><span class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">            temp = []</span><br><span class="line">            <span class="keyword">j</span> = i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">j</span> &lt; <span class="built_in">len</span>(nums):</span><br><span class="line">                <span class="keyword">k</span> = <span class="keyword">j</span>+<span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> <span class="keyword">k</span> &lt; <span class="built_in">len</span>(nums):</span><br><span class="line">                    <span class="keyword">if</span> nums[i] + nums[<span class="keyword">j</span>] + nums[<span class="keyword">k</span>] == <span class="number">0</span>:</span><br><span class="line">                        temp.<span class="keyword">append</span>(nums[i])</span><br><span class="line">                        temp.<span class="keyword">append</span>(nums[<span class="keyword">j</span>])</span><br><span class="line">                        temp.<span class="keyword">append</span>(nums[<span class="keyword">k</span>])</span><br><span class="line">                        <span class="keyword">if</span> sorted(temp) in resul<span class="variable">t:</span></span><br><span class="line">                            pass</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            result.<span class="keyword">append</span>(sorted(temp))</span><br><span class="line">                        temp = []</span><br><span class="line">                    <span class="keyword">k</span> += <span class="number">1</span></span><br><span class="line">                <span class="keyword">j</span> += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    <span class="keyword">print</span>(s.threeSum([-<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">4</span>]))</span><br></pre></td></tr></table></figure><h3 id="改正后的版本"><a class="header-anchor" href="#改正后的版本">¶</a>改正后的版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">threeSum</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :type nums: List[int]</span></span><br><span class="line"><span class="string">    :rtype: List[List[int]]</span></span><br><span class="line"><span class="string">    尝试使用双向指针的方式来进行查找，这样可以去除一个循环，关键点是进行边界的收缩</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    nums.sort()</span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">        l = i + <span class="number">1</span></span><br><span class="line">        r = len(nums) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r:</span><br><span class="line">            s = nums[i] + nums[l] + nums[r]</span><br><span class="line">            <span class="keyword">if</span> s == <span class="number">0</span>:</span><br><span class="line">                temp = [nums[i], nums[l], nums[r]]</span><br><span class="line">                <span class="comment"># 去重</span></span><br><span class="line">                <span class="keyword">if</span> temp <span class="keyword">in</span> result:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    result.append(temp)</span><br><span class="line">                l += <span class="number">1</span></span><br><span class="line">                r -= <span class="number">1</span></span><br><span class="line">                <span class="comment"># 剪枝操作 目的是收缩边界</span></span><br><span class="line">                <span class="keyword">while</span> l &lt; r <span class="keyword">and</span> nums[l] == nums[l - <span class="number">1</span>]:</span><br><span class="line">                    l += <span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> r &gt; l <span class="keyword">and</span> nums[r] == nums[r + <span class="number">1</span>]:</span><br><span class="line">                    r -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> s &gt; <span class="number">0</span>:</span><br><span class="line">                r -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                l += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十五题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.14</title>
    <link href="www.strivezs.com/2021/01/20/LeetCode%E7%AC%AC%E5%8D%81%E5%9B%9B%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/20/LeetCode%E7%AC%AC%E5%8D%81%E5%9B%9B%E9%A2%98/</id>
    <published>2021-01-20T11:38:23.260Z</published>
    <updated>2021-01-20T11:38:23.260Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十四题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>编写一个函数来查找字符串数组中的最长公共前缀。</p><p>如果不存在公共前缀，返回空字符串 “”。</p><p></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：strs = [<span class="string">"flower"</span>,<span class="string">"flow"</span>,<span class="string">"flight"</span>]</span><br><span class="line">输出：<span class="string">"fl"</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：strs = [<span class="string">"dog"</span>,<span class="string">"racecar"</span>,<span class="string">"car"</span>]</span><br><span class="line">输出：<span class="string">""</span></span><br><span class="line">解释：输入不存在公共前缀。</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> &lt;= strs.length &lt;= <span class="number">200</span></span><br><span class="line"><span class="number">0</span> &lt;= strs[i].length &lt;= <span class="number">200</span></span><br><span class="line">strs[i] 仅由小写英文字母组成</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span><span class="params">(self, strs)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type strs: List[str]</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> len(strs) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        <span class="keyword">if</span> len(strs) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> strs[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> strs[<span class="number">0</span>] == <span class="string">''</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        commanForward = <span class="string">''</span></span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        index = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(strs[<span class="number">0</span>])):</span><br><span class="line">            commanForward += strs[<span class="number">0</span>][i]</span><br><span class="line">            j = <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> j &lt; len(strs):</span><br><span class="line">                <span class="keyword">if</span> commanForward != strs[j][<span class="number">0</span>:i+<span class="number">1</span>]:</span><br><span class="line">                    index = i</span><br><span class="line">                    flag = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> flag:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> ~flag:</span><br><span class="line">                index = i+<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> index == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> strs[<span class="number">0</span>][<span class="number">0</span>:index]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.longestCommonPrefix([<span class="string">"a"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>]))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十四题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;编写一个函数来查找字符串数组中的最长公共前缀。&lt;/p&gt;
&lt;p&gt;如果不存在公共前缀，返回空字符串 
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.13</title>
    <link href="www.strivezs.com/2021/01/20/LeetCode%E7%AC%AC%E5%8D%81%E4%B8%89%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/20/LeetCode%E7%AC%AC%E5%8D%81%E4%B8%89%E9%A2%98/</id>
    <published>2021-01-20T11:14:22.654Z</published>
    <updated>2021-01-20T11:14:22.654Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十三题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">字符          数值</span><br><span class="line">I             <span class="number">1</span></span><br><span class="line">V             <span class="number">5</span></span><br><span class="line">X             <span class="number">10</span></span><br><span class="line">L             <span class="number">50</span></span><br><span class="line">C             <span class="number">100</span></span><br><span class="line">D             <span class="number">500</span></span><br><span class="line">M             <span class="number">1000</span></span><br></pre></td></tr></table></figure><p>例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p><p>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。<br>X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 <br>C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。<br>给定一个罗马数字，将其转换成整数。输入确保在 1 到 3999 的范围内。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"III"</span></span><br><span class="line">输出: <span class="number">3</span></span><br><span class="line">示例 <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"IV"</span></span><br><span class="line">输出: <span class="number">4</span></span><br><span class="line">示例 <span class="number">3</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"IX"</span></span><br><span class="line">输出: <span class="number">9</span></span><br><span class="line">示例 <span class="number">4</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"LVIII"</span></span><br><span class="line">输出: <span class="number">58</span></span><br><span class="line">解释: L = <span class="number">50</span>, V= <span class="number">5</span>, III = <span class="number">3.</span></span><br><span class="line">示例 <span class="number">5</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"MCMXCIV"</span></span><br><span class="line">输出: <span class="number">1994</span></span><br><span class="line">解释: M = <span class="number">1000</span>, CM = <span class="number">900</span>, XC = <span class="number">90</span>, IV = <span class="number">4.</span></span><br></pre></td></tr></table></figure><p>提示：</p><p>题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。<br>IC 和 IM 这样的例子并不符合题目要求，49 应该写作 XLIX，999 应该写作 CMXCIX 。<br>关于罗马数字的详尽书写规则，可以参考 罗马数字 - Mathematics 。</p><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">romanToInt</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        dictList = [<span class="string">'I'</span>, <span class="string">'IV'</span>, <span class="string">'V'</span>, <span class="string">'IX'</span>, <span class="string">'X'</span>, <span class="string">'XL'</span>, <span class="string">'L'</span>, <span class="string">'XC'</span>, <span class="string">'C'</span>, <span class="string">'CD'</span>, <span class="string">'D'</span>, <span class="string">'CM'</span>, <span class="string">'M'</span>]  <span class="comment"># 特殊规则字符</span></span><br><span class="line">        numList = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">90</span>, <span class="number">100</span>, <span class="number">400</span>, <span class="number">500</span>, <span class="number">900</span>, <span class="number">1000</span>]  <span class="comment"># 特殊规则数字</span></span><br><span class="line"></span><br><span class="line">        dicts = zip(dictList,numList)</span><br><span class="line">        dicts = dict(dicts)</span><br><span class="line">        dictSet = set(dictList)</span><br><span class="line">        result = <span class="number">0</span></span><br><span class="line">        i = len(s) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">                result += dicts[s[i]]</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> s[i] == <span class="string">'V'</span> <span class="keyword">or</span> s[i] == <span class="string">'X'</span>:</span><br><span class="line">                    <span class="keyword">if</span> s[i - <span class="number">1</span>] == <span class="string">'I'</span>:</span><br><span class="line">                        temp = s[i - <span class="number">1</span>] + s[i]</span><br><span class="line">                        result += dicts[temp]</span><br><span class="line">                        i -= <span class="number">2</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        result += dicts[s[i]]</span><br><span class="line">                        i -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> s[i] == <span class="string">'L'</span> <span class="keyword">or</span> s[i] == <span class="string">'C'</span>:</span><br><span class="line">                    <span class="keyword">if</span> s[i - <span class="number">1</span>] == <span class="string">'X'</span>:</span><br><span class="line">                        temp = s[i - <span class="number">1</span>] + s[i]</span><br><span class="line">                        result += dicts[temp]</span><br><span class="line">                        i -= <span class="number">2</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        result += dicts[s[i]]</span><br><span class="line">                        i -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> s[i] == <span class="string">'D'</span> <span class="keyword">or</span> s[i] == <span class="string">'M'</span>:</span><br><span class="line">                    <span class="keyword">if</span> s[i - <span class="number">1</span>] == <span class="string">'C'</span>:</span><br><span class="line">                        temp = s[i - <span class="number">1</span>] + s[i]</span><br><span class="line">                        result += dicts[temp]</span><br><span class="line">                        i -= <span class="number">2</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        result += dicts[s[i]]</span><br><span class="line">                        i -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    result += dicts[s[i]]</span><br><span class="line">                    i -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.romanToInt(<span class="string">'CX'</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十三题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。&lt;/p&gt;
&lt;figure cl
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.12</title>
    <link href="www.strivezs.com/2021/01/19/LeetCode%E7%AC%AC%E5%8D%81%E4%BA%8C%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/19/LeetCode%E7%AC%AC%E5%8D%81%E4%BA%8C%E9%A2%98/</id>
    <published>2021-01-19T10:59:46.411Z</published>
    <updated>2021-01-19T10:59:46.411Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十二题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">字符          数值</span><br><span class="line">I             <span class="number">1</span></span><br><span class="line">V             <span class="number">5</span></span><br><span class="line">X             <span class="number">10</span></span><br><span class="line">L             <span class="number">50</span></span><br><span class="line">C             <span class="number">100</span></span><br><span class="line">D             <span class="number">500</span></span><br><span class="line">M             <span class="number">1000</span></span><br></pre></td></tr></table></figure><p>例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p><p>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。<br>X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 <br>C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。<br>给定一个整数，将其转为罗马数字。输入确保在 1 到 3999 的范围内。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="number">3</span></span><br><span class="line">输出: <span class="string">"III"</span></span><br><span class="line">示例 <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="number">4</span></span><br><span class="line">输出: <span class="string">"IV"</span></span><br><span class="line">示例 <span class="number">3</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="number">9</span></span><br><span class="line">输出: <span class="string">"IX"</span></span><br><span class="line">示例 <span class="number">4</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="number">58</span></span><br><span class="line">输出: <span class="string">"LVIII"</span></span><br><span class="line">解释: L = <span class="number">50</span>, V = <span class="number">5</span>, III = <span class="number">3.</span></span><br><span class="line">示例 <span class="number">5</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="number">1994</span></span><br><span class="line">输出: <span class="string">"MCMXCIV"</span></span><br><span class="line">解释: M = <span class="number">1000</span>, CM = <span class="number">900</span>, XC = <span class="number">90</span>, IV = <span class="number">4.</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intToRoman</span><span class="params">(self, num)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type num: int</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># 列举出所有特殊情况：列出特殊情况,而对于其他情况则可以用使用循环处理</span></span><br><span class="line">        dictList = [<span class="string">'I'</span>,<span class="string">'IV'</span>,<span class="string">'V'</span>,<span class="string">'IX'</span>,<span class="string">'X'</span>,<span class="string">'XL'</span>,<span class="string">'L'</span>,<span class="string">'XC'</span>,<span class="string">'C'</span>,<span class="string">'CD'</span>,<span class="string">'D'</span>,<span class="string">'CM'</span>,<span class="string">'M'</span>]  <span class="comment"># 特殊规则字符</span></span><br><span class="line">        numList = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">90</span>,<span class="number">100</span>,<span class="number">400</span>,<span class="number">500</span>,<span class="number">900</span>,<span class="number">1000</span>]  <span class="comment"># 特殊规则数字</span></span><br><span class="line"></span><br><span class="line">        result = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(dictList)):</span><br><span class="line">            <span class="keyword">while</span> num &gt;= numList[len(dictList) - i - <span class="number">1</span>]:  <span class="comment"># 要从后往前处理，这样才能保证IV 在 I之前出现</span></span><br><span class="line">                num -= numList[len(dictList) - i - <span class="number">1</span>]</span><br><span class="line">                result += dictList[len(dictList) - i - <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.intToRoman(<span class="number">2018</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十二题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。&lt;/p&gt;
&lt;figure cl
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.11</title>
    <link href="www.strivezs.com/2021/01/18/LeetCode%E7%AC%AC%E5%8D%81%E4%B8%80%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/18/LeetCode%E7%AC%AC%E5%8D%81%E4%B8%80%E9%A2%98/</id>
    <published>2021-01-18T11:14:45.679Z</published>
    <updated>2021-01-18T11:14:45.679Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十一题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给你 n 个非负整数 a1，a2，…，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0) 。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</p><p>说明：你不能倾斜容器。</p><p></p><p>示例 1：</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/RoxA9E.jpg" alt="figure.1"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">输入：[<span class="number">1</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">7</span>]</span><br><span class="line">输出：<span class="number">49</span> </span><br><span class="line">解释：图中垂直线代表输入数组 [<span class="number">1</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">7</span>]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 <span class="number">49</span>。</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：height = [<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">输出：<span class="number">1</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：height = [<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">4</span>]</span><br><span class="line">输出：<span class="number">16</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：height = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line">输出：<span class="number">2</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line">n = height.length</span><br><span class="line"><span class="number">2</span> &lt;= n &lt;= <span class="number">3</span> * <span class="number">104</span></span><br><span class="line"><span class="number">0</span> &lt;= height[i] &lt;= <span class="number">3</span> * <span class="number">104</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxArea</span><span class="params">(self, height)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        从两头往中间靠，记录最佳</span></span><br><span class="line"><span class="string">        :type height: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        best = <span class="number">0</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        j = len(height) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j:</span><br><span class="line">            temp = (j - i) * min(height[i], height[j])  <span class="comment"># 计算盛水容量</span></span><br><span class="line">            <span class="keyword">if</span> temp &gt; best:</span><br><span class="line">                best = temp</span><br><span class="line">            <span class="keyword">if</span> height[i] &lt; height[j]:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                j -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> best</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.maxArea([<span class="number">1</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">7</span>]))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十一题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给你 n 个非负整数 a1，a2，…，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.10</title>
    <link href="www.strivezs.com/2021/01/17/LeetCode%E7%AC%AC%E5%8D%81%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/17/LeetCode%E7%AC%AC%E5%8D%81%E9%A2%98/</id>
    <published>2021-01-17T15:14:17.841Z</published>
    <updated>2021-01-17T15:14:17.841Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第十题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 ‘.’ 和 ‘*’ 的正则表达式匹配。</p><p>‘.’ 匹配任意单个字符<br>‘*’ 匹配零个或多个前面的那一个元素<br>所谓匹配，是要涵盖 整个 字符串 s的，而不是部分字符串。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"aa"</span> p = <span class="string">"a"</span></span><br><span class="line">输出：<span class="literal">false</span></span><br><span class="line">解释：<span class="string">"a"</span> 无法匹配 <span class="string">"aa"</span> 整个字符串。</span><br><span class="line">示例 <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"aa"</span> p = <span class="string">"a*"</span></span><br><span class="line">输出：<span class="literal">true</span></span><br><span class="line">解释：因为 <span class="string">'*'</span> 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 <span class="string">'a'</span>。因此，字符串 <span class="string">"aa"</span> 可被视为 <span class="string">'a'</span> 重复了一次。</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"ab"</span> p = <span class="string">".*"</span></span><br><span class="line">输出：<span class="literal">true</span></span><br><span class="line">解释：<span class="string">".*"</span> 表示可匹配零个或多个（<span class="string">'*'</span>）任意字符（<span class="string">'.'</span>）。</span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"aab"</span> p = <span class="string">"c*a*b"</span></span><br><span class="line">输出：<span class="literal">true</span></span><br><span class="line">解释：因为 <span class="string">'*'</span> 表示零个或多个，这里 <span class="string">'c'</span> 为 <span class="number">0</span> 个, <span class="string">'a'</span> 被重复一次。因此可以匹配字符串 <span class="string">"aab"</span>。</span><br><span class="line">示例 <span class="number">5</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"mississippi"</span> p = <span class="string">"mis*is*p*."</span></span><br><span class="line">输出：<span class="literal">false</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> &lt;= s.<span class="built_in">length</span> &lt;= <span class="number">20</span></span><br><span class="line"><span class="number">0</span> &lt;= p.<span class="built_in">length</span> &lt;= <span class="number">30</span></span><br><span class="line">s 可能为空，且只包含从 <span class="keyword">a</span>-z 的小写字母。</span><br><span class="line">p 可能为空，且只包含从 <span class="keyword">a</span>-z 的小写字母，以及字符 . 和 *。</span><br><span class="line">保证每次出现字符 * 时，前面都匹配到有效的字符</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isMatch</span><span class="params">(self, s, p)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :type p: str</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        matchObject = re.match(p,s)</span><br><span class="line">        <span class="comment"># print(result)</span></span><br><span class="line">        <span class="keyword">if</span> matchObject:</span><br><span class="line">            <span class="keyword">if</span> matchObject.group() == s:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.isMatch(<span class="string">'ab'</span>,<span class="string">'.c'</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第十题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 ‘.’ 和 ‘*’ 的正则表达式匹配。
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.9</title>
    <link href="www.strivezs.com/2021/01/16/LeetCode%E7%AC%AC%E4%B9%9D%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/16/LeetCode%E7%AC%AC%E4%B9%9D%E9%A2%98/</id>
    <published>2021-01-16T14:13:25.620Z</published>
    <updated>2021-01-16T14:13:25.620Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第九题"><a href="#LeetCode第九题" class="headerlink" title="LeetCode第九题"></a>LeetCode第九题</h1><p>今天从天津回石家庄，跑了一天晚上才收拾好，今天就做了个简单的题目，明天争取两道题，干巴爹。  </p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">示例</span> <span class="attr">1:</span></span><br><span class="line"></span><br><span class="line"><span class="string">输入:</span> <span class="number">121</span></span><br><span class="line"><span class="string">输出:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">示例</span> <span class="attr">2:</span></span><br><span class="line"></span><br><span class="line"><span class="string">输入:</span> <span class="number">-121</span></span><br><span class="line"><span class="string">输出:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">解释:</span> <span class="string">从左向右读,</span> <span class="string">为</span> <span class="number">-121</span> <span class="string">。</span> <span class="string">从右向左读,</span> <span class="string">为</span> <span class="number">121</span><span class="bullet">-</span> <span class="string">。因此它不是一个回文数。</span></span><br><span class="line"><span class="string">示例</span> <span class="attr">3:</span></span><br><span class="line"></span><br><span class="line"><span class="string">输入:</span> <span class="number">10</span></span><br><span class="line"><span class="string">输出:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">解释:</span> <span class="string">从右向左读,</span> <span class="string">为</span> <span class="number">01</span> <span class="string">。因此它不是一个回文数。</span></span><br><span class="line"><span class="string">进阶:</span></span><br></pre></td></tr></table></figure><br>你能不将整数转为字符串来解决这个问题吗？  </p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Python版本"><a href="#Python版本" class="headerlink" title="Python版本"></a>Python版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type x: int</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        x = str(abs(x))</span><br><span class="line">        reverse_x = x[::<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">if</span> reverse_x == x:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.isPalindrome(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">intToStr</span><span class="params">(<span class="keyword">int</span> number)</span></span>&#123;</span><br><span class="line">        <span class="built_in">string</span> result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> temp = number;</span><br><span class="line">        <span class="keyword">while</span>(temp != <span class="number">0</span>)&#123;</span><br><span class="line">            result += ((temp % <span class="number">10</span>) + <span class="string">'0'</span>);</span><br><span class="line">            temp /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        reverse(result.<span class="built_in">begin</span>(),result.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(x &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">string</span> goal=<span class="string">""</span>;</span><br><span class="line">            <span class="built_in">string</span> use = goal = intToStr(x);</span><br><span class="line">            reverse(use.<span class="built_in">begin</span>(),use.<span class="built_in">end</span>());</span><br><span class="line">            <span class="keyword">if</span>(use == goal)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode第九题&quot;&gt;&lt;a href=&quot;#LeetCode第九题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode第九题&quot;&gt;&lt;/a&gt;LeetCode第九题&lt;/h1&gt;&lt;p&gt;今天从天津回石家庄，跑了一天晚上才收拾好，今天就做了个简单的题目，明
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.8</title>
    <link href="www.strivezs.com/2021/01/15/LeetCode%E7%AC%AC%E5%85%AB%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/15/LeetCode%E7%AC%AC%E5%85%AB%E9%A2%98/</id>
    <published>2021-01-15T11:23:19.142Z</published>
    <updated>2021-01-15T11:23:19.142Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第八题"><a href="#LeetCode第八题" class="headerlink" title="LeetCode第八题"></a>LeetCode第八题</h1><p>又是辛勤劳动的一天呢QWQ。  </p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>请你来实现一个 atoi 函数，使其能将字符串转换成整数。</p><p>首先，该函数会根据需要丢弃无用的开头空格字符，直到寻找到第一个非空格的字符为止。接下来的转化规则如下：</p><p>如果第一个非空字符为正或者负号时，则将该符号与之后面尽可能多的连续数字字符组合起来，形成一个有符号整数。<br>假如第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成一个整数。<br>该字符串在有效的整数部分之后也可能会存在多余的字符，那么这些字符可以被忽略，它们对函数不应该造成影响。<br>假如该字符串中的第一个非空格字符不是一个有效整数字符、字符串为空或字符串仅包含空白字符时，则你的函数不需要进行转换，即无法进行有效转换。</p><p>在任何情况下，若函数不能进行有效的转换时，请返回 0 。</p><p>注意：</p><p>本题中的空白字符只包括空格字符 ‘ ‘ 。<br>假设我们的环境只能存储 32 位大小的有符号整数，那么其数值范围为 [−231,  231 − 1]。如果数值超过这个范围，请返回  231 − 1 或 −231 。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"42"</span></span><br><span class="line">输出: <span class="number">42</span></span><br><span class="line">示例 <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"   -42"</span></span><br><span class="line">输出: <span class="number">-42</span></span><br><span class="line">解释: 第一个非空白字符为 <span class="string">'-'</span>, 它是一个负号。</span><br><span class="line">     我们尽可能将负号与后面所有连续出现的数字组合起来，最后得到 <span class="number">-42</span> 。</span><br><span class="line">示例 <span class="number">3</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"4193 with words"</span></span><br><span class="line">输出: <span class="number">4193</span></span><br><span class="line">解释: 转换截止于数字 <span class="string">'3'</span> ，因为它的下一个字符不为数字。</span><br><span class="line">示例 <span class="number">4</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"words and 987"</span></span><br><span class="line">输出: <span class="number">0</span></span><br><span class="line">解释: 第一个非空字符是 <span class="string">'w'</span>, 但它不是数字或正、负号。</span><br><span class="line">     因此无法执行有效的转换。</span><br><span class="line">示例 <span class="number">5</span>:</span><br><span class="line"></span><br><span class="line">输入: <span class="string">"-91283472332"</span></span><br><span class="line">输出: <span class="number">-2147483648</span></span><br><span class="line">解释: 数字 <span class="string">"-91283472332"</span> 超过 <span class="number">32</span> 位有符号整数范围。 </span><br><span class="line">     因此返回 INT_MIN (−<span class="number">231</span>) 。</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> &lt;= s.length &lt;= <span class="number">200</span></span><br><span class="line">s 由英文字母（大写和小写）、数字、<span class="string">' '</span>、<span class="string">'+'</span>、<span class="string">'-'</span> 和 <span class="string">'.'</span> 组成</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 判断是否为数字</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isNum</span><span class="params">(self,s)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> s == <span class="string">'0'</span> <span class="keyword">or</span> s == <span class="string">'1'</span> <span class="keyword">or</span> s == <span class="string">'2'</span> <span class="keyword">or</span> s == <span class="string">'3'</span> <span class="keyword">or</span> s == <span class="string">'4'</span> <span class="keyword">or</span> s == <span class="string">'5'</span> <span class="keyword">or</span> \</span><br><span class="line">        s == <span class="string">'6'</span> <span class="keyword">or</span> s == <span class="string">'7'</span> <span class="keyword">or</span> s == <span class="string">'8'</span> <span class="keyword">or</span> s == <span class="string">'9'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 丢弃开头空白字符</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deleteKong</span><span class="params">(self,s)</span>:</span></span><br><span class="line">        index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            <span class="keyword">if</span> s[i] != <span class="string">' '</span>:</span><br><span class="line">                index = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        s = s[index:]</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">myAtoi</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        s = self.deleteKong(s)</span><br><span class="line">        flag = <span class="literal">False</span> <span class="comment"># 正负标志</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">1</span> <span class="keyword">and</span> s[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">1</span> <span class="keyword">and</span> s[<span class="number">0</span>] == <span class="string">'+'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> s[<span class="number">0</span>] == <span class="string">'-'</span> <span class="keyword">or</span> s[<span class="number">0</span>] == <span class="string">'+'</span>:</span><br><span class="line">            <span class="keyword">if</span> s[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                flag = <span class="literal">False</span></span><br><span class="line">            s = s[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> self.isNum(s[<span class="number">0</span>]):</span><br><span class="line">            result = <span class="string">''</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">                <span class="keyword">if</span> self.isNum(s[i]):</span><br><span class="line">                    result += s[i]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            result = int(result)</span><br><span class="line">            <span class="keyword">if</span> result &lt; -(<span class="number">2</span>**<span class="number">31</span>) <span class="keyword">or</span> result &gt; (<span class="number">2</span>**<span class="number">31</span>)<span class="number">-1</span>:</span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    <span class="keyword">return</span> -(<span class="number">2</span>**<span class="number">31</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> (<span class="number">2</span>**<span class="number">31</span>)<span class="number">-1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">-1</span>*result</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> result</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.myAtoi(<span class="string">'2147483648'</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode第八题&quot;&gt;&lt;a href=&quot;#LeetCode第八题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode第八题&quot;&gt;&lt;/a&gt;LeetCode第八题&lt;/h1&gt;&lt;p&gt;又是辛勤劳动的一天呢QWQ。  &lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.7</title>
    <link href="www.strivezs.com/2021/01/14/LeetCode%E7%AC%AC%E4%B8%83%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/14/LeetCode%E7%AC%AC%E4%B8%83%E9%A2%98/</id>
    <published>2021-01-14T14:59:58.262Z</published>
    <updated>2021-01-14T14:59:58.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第七题"><a href="#LeetCode第七题" class="headerlink" title="LeetCode第七题"></a>LeetCode第七题</h1><p>今天晚上看了会直播，所以来晚了，一般不缺勤呢。过几天反向跑毒完，我回家还要坚持背英语。  </p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。</p><p>注意：</p><p>假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">123</span></span><br><span class="line">输出：<span class="number">321</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">-123</span></span><br><span class="line">输出：<span class="number">-321</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">120</span></span><br><span class="line">输出：<span class="number">21</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：x = <span class="number">0</span></span><br><span class="line">输出：<span class="number">0</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">-231</span> &lt;= x &lt;= <span class="number">231</span> - <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Python版本"><a href="#Python版本" class="headerlink" title="Python版本"></a>Python版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverse</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type x: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> x == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> x</span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">            x = abs(x)</span><br><span class="line">        item = list(str(x))</span><br><span class="line">        item_reverse = item[::<span class="number">-1</span>]</span><br><span class="line">        result = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(item_reverse)):</span><br><span class="line">            result += item_reverse[i]</span><br><span class="line">        result = int(result)</span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            result = <span class="number">-1</span> * result</span><br><span class="line">        <span class="keyword">if</span> result &lt; -(<span class="number">2</span>**<span class="number">31</span>) <span class="keyword">or</span> result &gt; (<span class="number">2</span>**<span class="number">31</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(<span class="number">2</span>**<span class="number">31</span>)</span><br><span class="line">    print(s.reverse(<span class="number">1534236469</span>))</span><br></pre></td></tr></table></figure><h3 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;<span class="built_in">string</span>.h&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="symbol">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">int</span> reverse(<span class="built_in">int</span> x) &#123;</span><br><span class="line">        <span class="built_in">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> pop = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x != <span class="number">0</span>)&#123;</span><br><span class="line">            pop = x % <span class="number">10</span>; <span class="comment">//取出最右变得数字</span></span><br><span class="line">            x /= <span class="number">10</span>; <span class="comment">//实际上就是完成了 从 123 变成 12 并且取出 3 </span></span><br><span class="line">            <span class="keyword">if</span>(result &gt; INT_MAX / <span class="number">10</span> || (result == INT_MAX / <span class="number">10</span> &amp;&amp; pop &gt; <span class="number">7</span>))&#123;<span class="comment">//判断上限</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(result &lt; INT_MIN / <span class="number">10</span> || (result == INT_MIN / <span class="number">10</span> &amp;&amp; pop &lt; <span class="number">-8</span>))&#123;<span class="comment">//判断下限</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            result = result * <span class="number">10</span> + pop;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode第七题&quot;&gt;&lt;a href=&quot;#LeetCode第七题&quot; class=&quot;headerlink&quot; title=&quot;LeetCode第七题&quot;&gt;&lt;/a&gt;LeetCode第七题&lt;/h1&gt;&lt;p&gt;今天晚上看了会直播，所以来晚了，一般不缺勤呢。过几天反向跑毒完，我回
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.6</title>
    <link href="www.strivezs.com/2021/01/13/LeetCode%E7%AC%AC%E5%85%AD%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/13/LeetCode%E7%AC%AC%E5%85%AD%E9%A2%98/</id>
    <published>2021-01-13T11:55:36.545Z</published>
    <updated>2021-01-13T11:55:36.545Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第六题</h1><p>本题的实质就是模拟，虽然AC了，但是空间复杂度有点高，时间复杂度的话就是O(len(s))主要是找不到一个合适的存储，我只能用numpy存储了，大小的话和numRow有关。</p><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z 字形排列。</p><p>比如输入字符串为 “PAYPALISHIRING” 行数为 3 时，排列如下：</p><p>P   A   H   N<br>A P L S I I G<br>Y   I   R<br>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：“PAHNAPLSIIGYIR”。</p><p>请你实现这个将字符串进行指定行数变换的函数：</p><p>string convert(string s, int numRows);</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"PAYPALISHIRING"</span>, numRows = <span class="number">3</span></span><br><span class="line">输出：<span class="string">"PAHNAPLSIIGYIR"</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line">输入：s = <span class="string">"PAYPALISHIRING"</span>, numRows = <span class="number">4</span></span><br><span class="line">输出：<span class="string">"PINALSIGYAHRPI"</span></span><br><span class="line">解释：</span><br><span class="line">P     I    N</span><br><span class="line">A   L S  I G</span><br><span class="line">Y A   H R</span><br><span class="line">P     I</span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"A"</span>, numRows = <span class="number">1</span></span><br><span class="line">输出：<span class="string">"A"</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> &lt;= s.length &lt;= <span class="number">1000</span></span><br><span class="line">s 由英文字母（小写和大写）、',' 和 '.' 组成</span><br><span class="line"><span class="number">1</span> &lt;= numRows &lt;= <span class="number">1000</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><p>稍微给个原理图:</p><p><img src="https://gitee.com/zyp521/upload_image/raw/master/O3gsTr.png" alt="figure.1"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(self, s, numRows)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :type numRows: int</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        </span><br><span class="line">        list_str = list(s)</span><br><span class="line">        length = len(s)</span><br><span class="line">        <span class="keyword">if</span> numRows == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">        onePart = numRows + (numRows - <span class="number">2</span>) <span class="comment"># 一个Z字形前半部分的字符个数</span></span><br><span class="line">        numPart = int(length / onePart) + <span class="number">1</span> <span class="comment"># 总共多少个part</span></span><br><span class="line">        <span class="comment">#print(list_str)</span></span><br><span class="line"></span><br><span class="line">        storeChart = np.zeros((numRows,numPart*numRows<span class="number">-1</span>),dtype=np.string_) <span class="comment"># 用来存储Z字形变换后的字符</span></span><br><span class="line">        <span class="comment">#print(storeChart)</span></span><br><span class="line">        row = <span class="number">0</span></span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):  <span class="comment"># 时间复杂度为O(len(s))</span></span><br><span class="line">            <span class="keyword">if</span> numRows == <span class="number">2</span>:  <span class="comment"># 单独处理2这种情况</span></span><br><span class="line">                <span class="keyword">if</span> i % onePart == <span class="number">0</span>:</span><br><span class="line">                    storeChart[i % onePart][row] = list_str[i]</span><br><span class="line">                <span class="keyword">elif</span> i % onePart == <span class="number">1</span>:</span><br><span class="line">                    storeChart[i % onePart][row] = list_str[i]</span><br><span class="line">                    row += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> i % onePart &lt; numRows:</span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    row += <span class="number">1</span></span><br><span class="line">                    flag = <span class="literal">False</span></span><br><span class="line">                storeChart[i % onePart][row] = list_str[i]</span><br><span class="line">            <span class="keyword">elif</span> i % onePart &gt;= numRows:</span><br><span class="line">                row += <span class="number">1</span></span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">                storeChart[onePart - i % onePart][row] = list_str[i]</span><br><span class="line">        <span class="comment">#print(storeChart)</span></span><br><span class="line">        strList = storeChart.astype(np.str)</span><br><span class="line">        result = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(strList.shape[<span class="number">0</span>]):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(strList.shape[<span class="number">1</span>]):</span><br><span class="line">                <span class="keyword">if</span> strList[i][j] != <span class="string">''</span>:</span><br><span class="line">                    result += str(strList[i][j])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = Solution()</span><br><span class="line">    print(s.convert(<span class="string">'ABCD'</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第六题&lt;/h1&gt;
&lt;p&gt;本题的实质就是模拟，虽然AC了，但是空间复杂度有点高，时间复杂度的话就是O(len(s))主要是找不到一个合适的存储，我只能用numpy存储了，大小的话和numRow有关。&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;h
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.5</title>
    <link href="www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E4%BA%94%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E4%BA%94%E9%A2%98/</id>
    <published>2021-01-11T12:16:42.782Z</published>
    <updated>2021-01-11T12:16:42.782Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode第五题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给你一个字符串 s，找到 s 中最长的回文子串。</p><p></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"babad"</span></span><br><span class="line">输出：<span class="string">"bab"</span></span><br><span class="line">解释：<span class="string">"aba"</span> 同样是符合题意的答案。</span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"cbbd"</span></span><br><span class="line">输出：<span class="string">"bb"</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"a"</span></span><br><span class="line">输出：<span class="string">"a"</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：s = <span class="string">"ac"</span></span><br><span class="line">输出：<span class="string">"a"</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> &lt;= s.length &lt;= <span class="number">1000</span></span><br><span class="line">s 仅由数字和英文字母（大写和/或小写）组成</span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><h3 id="Python"><a class="header-anchor" href="#Python">¶</a>Python</h3><p>这个版本超时了，原因分析的话：应该是划分子串操作timeout了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut</span><span class="params">(self, str1)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    得到字符串的所有子串</span></span><br><span class="line"><span class="string">    :type str1: str</span></span><br><span class="line"><span class="string">    :return: list</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    results = []</span><br><span class="line">    <span class="comment"># x + 1 表示子字符串长度</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">        <span class="comment"># i 表示偏移量</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(str1) - x):</span><br><span class="line">            tempStr = str1[i:i + x + <span class="number">1</span>]</span><br><span class="line">            results.append(tempStr)</span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span><span class="params">(self, s)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :type s: str</span></span><br><span class="line"><span class="string">    :rtype: str</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    split_res = self.cut(s)</span><br><span class="line">    length = len(split_res)</span><br><span class="line">    maxlen = <span class="number">0</span></span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">        temp = split_res[length - i - <span class="number">1</span>][::<span class="number">-1</span>] <span class="comment"># 字符串翻转</span></span><br><span class="line">        <span class="keyword">if</span> temp == split_res[length - i - <span class="number">1</span>]:</span><br><span class="line">            <span class="keyword">if</span> len(temp) &gt; maxlen:</span><br><span class="line">                maxlen = len(temp)</span><br><span class="line">                result = split_res[length - i - <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h3 id="C"><a class="header-anchor" href="#C">¶</a>C++</h3><p>AC的C++版本</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;<span class="built_in">string</span>.h&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="symbol">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> longestPalindrome(<span class="built_in">string</span> s) &#123;</span><br><span class="line">        <span class="built_in">int</span> len = s.length();</span><br><span class="line">        <span class="keyword">if</span>(len == <span class="number">0</span> || len == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span> start=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> maxLen = <span class="number">1</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="built_in">int</span>&gt; &gt; ls(len,vector&lt;<span class="built_in">int</span>&gt;(len)); <span class="comment">//定义一个二维数组</span></span><br><span class="line">        <span class="comment">//初始化找一个长度为2的字符串的回文  s[i] = s[i+1]</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            ls[i][i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i &lt; len<span class="number">-1</span> &amp;&amp; s[i] == s[i+<span class="number">1</span>])&#123;</span><br><span class="line">                ls[i][i+<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">                maxLen = <span class="number">2</span>;</span><br><span class="line">                start = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//接下来处理长度大于2 小于最大长度的回文</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">3</span>;i&lt;=len;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> j=<span class="number">0</span>;j+i<span class="number">-1</span>&lt;len;j++)&#123;</span><br><span class="line">                <span class="built_in">int</span> ends = j+i<span class="number">-1</span>; <span class="comment">//终止字符位置  长度为i的字符串</span></span><br><span class="line">                <span class="keyword">if</span>(s[j] == s[ends] &amp;&amp; ls[j+<span class="number">1</span>][ends<span class="number">-1</span>] == <span class="number">1</span>)&#123; <span class="comment">//满足首位字符相同，且长度为i-1的字符串也是回文串</span></span><br><span class="line">                    ls[j][ends] = <span class="number">1</span>;</span><br><span class="line">                    start = j;</span><br><span class="line">                    maxLen = i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substr(start,maxLen);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode第五题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给你一个字符串 s，找到 s 中最长的回文子串。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;figure clas
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>Python中round四舍五入成偶的问题</title>
    <link href="www.strivezs.com/2021/01/11/Python%E4%B8%ADround%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%E6%88%90%E5%81%B6%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/11/Python%E4%B8%ADround%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%E6%88%90%E5%81%B6%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-01-11T11:22:58.791Z</published>
    <updated>2021-01-11T11:22:58.791Z</updated>
    
    <content type="html"><![CDATA[<h1>Python中round四舍五入成偶的问题</h1><p>今天在编写代码的时候发现了一个round的小问题，我对1.5使用round()得到的是2，但是我对2.5使用round（）的时候同样也得到的是2，经过我搜索发现，python3中round（）会对1.5 2.5这类到相邻整数距离相同的数字取偶数整数，而不是按照大家正常认为的四舍五入。</p><p>在Python2和Python3中对于round()函数的取值的的区别</p><p>例：</p><ol><li>Python2中对round()函数的取值</li></ol><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">24.5</span>))</span></span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line"><span class="number">25</span></span><br></pre></td></tr></table></figure><ol start="2"><li>当Python中对同样的数进行round()函数的取值</li></ol><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">24.5</span>))</span></span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line"><span class="number">24</span></span><br></pre></td></tr></table></figure><p>在Python2中和Python3中对同一个数进行round()取值时，结果却不同</p><p>很简单，在Python2中对于round()取值就是数学概念进行四舍五入</p><p>下面是Python3中对不同数的进行round()函数的取值</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">22.5</span>))</span></span><br><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">23.5</span>))</span></span><br><span class="line"><span class="function"><span class="title">print</span>(<span class="title"><span class="built_in">round</span></span>(<span class="number">22.51</span>))</span></span><br><span class="line"> </span><br><span class="line">输出结果：</span><br><span class="line"></span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">24</span></span><br><span class="line"><span class="number">23</span></span><br></pre></td></tr></table></figure><p>当对22.5取值是舍</p><p>当对23.5取值是进</p><p>当对22.51取值是进</p><p>这样就可以证明了：</p><p>①.当被修约的值为5时，如果他前面的数为偶数且被修约数的后面没有数时则舍弃；</p><p>②.当被修约的值为5时，如果他前面的数为奇数时则进位；</p><p>③.当被修约的值为5时，如果他前面的数为偶数时且被修约数的后面还有数时，则进位。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;Python中round四舍五入成偶的问题&lt;/h1&gt;
&lt;p&gt;今天在编写代码的时候发现了一个round的小问题，我对1.5使用round()得到的是2，但是我对2.5使用round（）的时候同样也得到的是2，经过我搜索发现，python3中round（）会对1.5 2.5这
      
    
    </summary>
    
    
      <category term="Python" scheme="www.strivezs.com/categories/Python/"/>
    
      <category term="问题记录" scheme="www.strivezs.com/categories/Python/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="Python" scheme="www.strivezs.com/tags/Python/"/>
    
      <category term="round" scheme="www.strivezs.com/tags/round/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode No.4</title>
    <link href="www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E5%9B%9B%E9%A2%98/"/>
    <id>www.strivezs.com/2021/01/11/LeetCode%E7%AC%AC%E5%9B%9B%E9%A2%98/</id>
    <published>2021-01-11T11:19:08.237Z</published>
    <updated>2021-01-11T11:19:08.237Z</updated>
    
    <content type="html"><![CDATA[<h1>LeetCode 第四题</h1><h2 id="题目描述"><a class="header-anchor" href="#题目描述">¶</a>题目描述</h2><p>给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这两个正序数组的中位数。</p><p>进阶：你能设计一个时间复杂度为 O(log (m+n)) 的算法解决此问题吗？</p><p></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">示例 <span class="number">1</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">1</span>,<span class="number">3</span>], nums2 = [<span class="number">2</span>]</span><br><span class="line">输出：<span class="number">2.00000</span></span><br><span class="line">解释：合并数组 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] ，中位数 <span class="number">2</span></span><br><span class="line">示例 <span class="number">2</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">1</span>,<span class="number">2</span>], nums2 = [<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">输出：<span class="number">2.50000</span></span><br><span class="line">解释：合并数组 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>] ，中位数 (<span class="number">2</span> + <span class="number">3</span>) / <span class="number">2</span> = <span class="number">2.5</span></span><br><span class="line">示例 <span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">0</span>,<span class="number">0</span>], nums2 = [<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">输出：<span class="number">0.00000</span></span><br><span class="line">示例 <span class="number">4</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [], nums2 = [<span class="number">1</span>]</span><br><span class="line">输出：<span class="number">1.00000</span></span><br><span class="line">示例 <span class="number">5</span>：</span><br><span class="line"></span><br><span class="line">输入：nums1 = [<span class="number">2</span>], nums2 = []</span><br><span class="line">输出：<span class="number">2.00000</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line">nums1.length == m</span><br><span class="line">nums2.length == n</span><br><span class="line"><span class="number">0</span> &lt;= m &lt;= <span class="number">1000</span></span><br><span class="line"><span class="number">0</span> &lt;= n &lt;= <span class="number">1000</span></span><br><span class="line"><span class="number">1</span> &lt;= m + n &lt;= <span class="number">2000</span></span><br><span class="line"><span class="number">-106</span> &lt;= nums1[i], nums2[i] &lt;= <span class="number">106</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h2><h3 id="Python版本"><a class="header-anchor" href="#Python版本">¶</a>Python版本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMedianSortedArrays</span><span class="params">(self, nums1, nums2)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums1: List[int]</span></span><br><span class="line"><span class="string">        :type nums2: List[int]</span></span><br><span class="line"><span class="string">        :rtype: float</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment">#print(nums1)</span></span><br><span class="line">        nums1.extend(nums2)</span><br><span class="line">        <span class="comment">#print(nums1)</span></span><br><span class="line">        nums1.sort()</span><br><span class="line">        length = len(nums1)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> length == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> nums1[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">elif</span> length == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> length % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            index1 = int(length / <span class="number">2</span>)</span><br><span class="line">            index2 = index1 - <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> (nums1[index1] + nums1[index2]) / <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> length % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">            index = int((length / <span class="number">2</span>))</span><br><span class="line">            <span class="keyword">return</span> nums1[index]</span><br></pre></td></tr></table></figure><h3 id="C"><a class="header-anchor" href="#C">¶</a>C++</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; <span class="built_in">list</span>;</span><br><span class="line">        <span class="keyword">double</span> result=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums1.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="built_in">list</span>.push_back(nums1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums2.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            <span class="built_in">list</span>.push_back(nums2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(<span class="built_in">list</span>.<span class="built_in">begin</span>(),<span class="built_in">list</span>.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">list</span>.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(len%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> index1 = len/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> index2 = index1 + <span class="number">1</span>;</span><br><span class="line">            result = (<span class="built_in">list</span>[index1<span class="number">-1</span>] + <span class="built_in">list</span>[index2<span class="number">-1</span>]) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            result = <span class="built_in">list</span>[<span class="built_in">ceil</span>(<span class="keyword">float</span>(len)/<span class="number">2</span>)<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;LeetCode 第四题&lt;/h1&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#题目描述&quot;&gt;¶&lt;/a&gt;题目描述&lt;/h2&gt;
&lt;p&gt;给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这
      
    
    </summary>
    
    
      <category term="OJ" scheme="www.strivezs.com/categories/OJ/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/categories/OJ/LeetCode/"/>
    
    
      <category term="Programing" scheme="www.strivezs.com/tags/Programing/"/>
    
      <category term="LeetCode" scheme="www.strivezs.com/tags/LeetCode/"/>
    
      <category term="OJ" scheme="www.strivezs.com/tags/OJ/"/>
    
  </entry>
  
</feed>
